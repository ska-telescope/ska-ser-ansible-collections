---
heat_template_version: 2017-09-01

description: >
  Heat stack template for a stack containing one Neutron port which is on
  a named network and subnet (and does not have a floating IP)

parameters:
  cluster_net:
    type: json
    label: Network names and subnets to which the nodes should be attached
  secgroup_id:
    type: string
    label: Security Group ID
  groupname:
    type: string
    label: Instance group name
  create_floating_ip:
    type: string
    label: Create floating IP - list of applicable group names

conditions:
  cond_create_floating_ip: {contains: [{get_param: groupname}, {get_param: create_floating_ip}]}

resources:

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: [ cluster_net, 0, net ] }
      security_groups: ["default", { get_param: secgroup_id }]
      # security_groups: ["default"]
      # fixed_ips:
      #   - subnet_id: { get_param: [ cluster_net, 0, subnet ] }

  floating_ip:
    type: "OS::Neutron::FloatingIP"
    condition: cond_create_floating_ip
    properties:
        floating_network_id: { get_param: [ cluster_net, 0, floatingip_net_id ] }
        port_id: {get_resource: port }

outputs:
  OS::stack_id:
    description: The network list
    value:
      - port: { get_resource: port }

  networks:
    description: The network list
    value:
      - port: { get_resource: port }

  primary_ip:
    description: ID of the IP assigned on the named cluster network
    value: { get_attr: [ port, fixed_ips, 0, ip_address ] }

  floating_ip:
    description: ID of the IP assigned on the named external network
    value: {if: [cond_create_floating_ip, { get_attr: [ floating_ip, floating_ip_address ] }, ''] }
