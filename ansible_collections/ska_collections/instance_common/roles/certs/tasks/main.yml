---

- name: "Check if private key exists"
  stat:
    path: "{{ certificates_dir }}/{{ private_key_name }}.key"
  register: check_key

- name: "Check if certificate exists"
  stat:
    path: "{{ certificates_dir }}/{{ certificate_name }}.crt"
  register: check_cert

- name: Create certificates
  become: True
  block:
  - name: Create certificates directory
    ansible.builtin.file:
      path: "{{ certificates_dir }}"
      state: directory
      mode: "0700"

  - name: Create private key for new certificate
    community.crypto.openssl_privatekey:
      path: "{{ certificates_dir }}/{{ private_key_name }}.key"
      mode: "0600"

  - name: Create certificate signing request (CSR) for new certificate
    community.crypto.openssl_csr_pipe:
      privatekey_path: "{{ certificates_dir }}/{{ private_key_name }}.key"
      common_name: "{{ ansible_hostname }}"
      subject_alt_name: 'DNS:{{ ansible_hostname }},DNS:{{ dns_alt_name }},IP:{{ ansible_default_ipv4.address }}'
      organization_name: "{{ organization_name }}"
    register: csr

  - name: Sign certificate with our CA
    community.crypto.x509_certificate_pipe:
      csr_content: "{{ csr.csr }}"
      provider: ownca
      ownca_path: "{{ certificates_dir }}/ca-certificate.crt"
      ownca_privatekey_path: "{{ certificates_dir }}/ca-certificate.key"
      ownca_privatekey_passphrase: "{{ ca_cert_pass }}"
      ownca_not_after: +365d # valid for one year
      ownca_not_before: "-1d" # valid since yesterday
    delegate_to: terminus
    register: certificate

  - name: Write certificate file on client host
    copy:
      dest: "{{ certificates_dir }}/{{ certificate_name }}.crt"
      content: "{{ certificate.certificate }}"
  when: not (check_key.stat.exists and check_cert.stat.exists) or certificates_recreate

- name: Get CA certificate pem from Terminus
  ansible.builtin.slurp:
    src: "{{ certificates_dir }}/ca-certificate.crt"
  delegate_to: terminus
  register: capemfile

- name: Write CA certificate file on client host
  copy:
    content: "{{ capemfile['content'] | b64decode }}"
    dest: "{{ certificates_dir }}/ca-certificate.crt"

- name: Set certificates_dir fact
  set_fact:
    certificates_dir: "{{ certificates_dir }}"
