---
- name: Check if private key exists
  ansible.builtin.stat:
    path: "{{ certificates_dir }}/{{ certificate_name }}.key"
  register: check_key

- name: Check if certificate exists
  ansible.builtin.stat:
    path: "{{ certificates_dir }}/{{ certificate_name }}.crt"
  register: check_cert

- name: Create certificates
  become: true
  when: (not (check_key.stat.exists and check_cert.stat.exists)) or certificate_recreate
  block:
    - name: Create certificates directory
      ansible.builtin.file:
        path: "{{ certificates_dir }}"
        state: directory
        mode: 0700

    - name: Create private key for new certificate
      community.crypto.openssl_privatekey:
        path: "{{ certificates_dir }}/{{ certificate_name }}.key"
        mode: 0600

    - name: Set certificate subject alternative names
      ansible.builtin.set_fact:
        certificate_san: "{{ (certificate_subject_alt_names | default([])) | join(',') }}"

    - name: Create certificate signing request (CSR) for new certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ certificates_dir }}/{{ certificate_name }}.key"
        common_name: "{{ certificate_common_name }}"
        subject_alt_name: '{{ (certificate_san | length > 0) | ternary(certificate_san, omit) }}'
        organization_name: "SKAO"
      register: csr

    - name: Sign certificate with our CA
      community.crypto.x509_certificate_pipe:
        csr_content: "{{ csr.csr }}"
        provider: ownca
        ownca_path: "{{ certificates_dir }}/ca-certificate.crt"
        ownca_privatekey_path: "{{ certificates_dir }}/ca-certificate.key"
        ownca_privatekey_passphrase: "{{ ca_cert_password }}"
        ownca_not_after: "+{{ certificate_validity_days }}d"
        ownca_not_before: "-1d" # valid since yesterday
      delegate_to: "{{ ca_host }}"
      register: certificate

    - name: Write certificate file on client host  # noqa template-instead-of-copy
      ansible.builtin.copy:
        dest: "{{ certificates_dir }}/{{ certificate_name }}.crt"
        content: "{{ certificate.certificate }}"
        mode: 0644

- name: Get CA certificate pem from our CA
  ansible.builtin.slurp:
    src: "{{ certificates_dir }}/ca-certificate.crt"
  delegate_to: "{{ ca_host }}"
  register: capemfile

- name: Write CA certificate file on client host  # noqa template-instead-of-copy
  ansible.builtin.copy:
    content: "{{ capemfile['content'] | b64decode }}"
    dest: "{{ certificates_dir }}/ca-certificate.crt"
    mode: 0644

- name: Set certificates_dir fact
  ansible.builtin.set_fact:
    certificates_dir: "{{ certificates_dir }}"
