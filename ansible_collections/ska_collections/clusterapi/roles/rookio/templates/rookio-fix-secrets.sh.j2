#!/usr/bin/bash

# fix rook secrets
set -e

##############
# VARIABLES #
#############
MON_SECRET_NAME=rook-ceph-mon
MON_SECRET_CLUSTER_NAME_KEYNAME=cluster-name
MON_SECRET_FSID_KEYNAME=fsid
MON_SECRET_ADMIN_KEYRING_KEYNAME=admin-secret
MON_SECRET_MON_KEYRING_KEYNAME=mon-secret
MON_ENDPOINT_CONFIGMAP_NAME=rook-ceph-mon-endpoints
ROOK_EXTERNAL_CLUSTER_NAME=$ROOK_NAMESPACE
ROOK_EXTERNAL_MAX_MON_ID=2
ROOK_EXTERNAL_MAPPING={}
ROOK_EXTERNAL_MONITOR_SECRET=mon-secret
CEPH_ADMIN=admin

#############
# FUNCTIONS #
#############

function checkEnvVars() {
    if [ -z "$ROOK_NAMESPACE" ]; then
        echo "Please populate the environment variable NAMESPACE"
        exit 1
    fi
    if [ -z "$ROOK_EXTERNAL_FSID" ]; then
        echo "Please populate the environment variable ROOK_EXTERNAL_FSID"
        exit 1
    fi
    if [ -z "$ROOK_EXTERNAL_ADMIN_SECRET" ]; then
        echo "Please populate the environment variable ROOK_EXTERNAL_ADMIN_SECRET"
        exit 1
    fi
    if [ -z "$ROOK_EXTERNAL_CEPH_MON_DATA" ]; then
        echo "Please populate the environment variable ROOK_EXTERNAL_CEPH_MON_DATA"
        exit 1
    fi
}

########
# MAIN #
########
checkEnvVars

# monitors are misconfigured for external Ceph - NOTE clusterID and Namespace !!!!!!
echo ""
echo "fixing rook-ceph-csi-config"
kubectl -n ${ROOK_NAMESPACE} get configmap rook-ceph-csi-config -o yaml || true
kubectl -n ${ROOK_NAMESPACE} apply -f - <<EOF
apiVersion: v1
data:
csi-cluster-config-json: '[{"clusterID":"${ROOK_NAMESPACE}","monitors":[$ROOK_EXTERNAL_CEPH_MONITORS]}]'
kind: ConfigMap
metadata:
name: rook-ceph-csi-config
namespace: ${ROOK_NAMESPACE}
EOF

# patch the secret
echo "Patch the secrets"
export ADMIN_USER_NAME=$(echo -n "client.admin" | base64)
export ADMIN_SECRET_BASE64=$(echo -n "${ROOK_EXTERNAL_ADMIN_SECRET}" | base64 -w 0)

# patch secret if it exists
# https://github.com/rook/rook/issues/6089
kubectl patch secret/rook-ceph-mon \
        -n ${ROOK_NAMESPACE} \
        --type merge \
        -p "{\"data\":{\"ceph-username\":\"$ADMIN_USER_NAME\",\"ceph-secret\":\"$ADMIN_SECRET_BASE64\"} }" || true

echo "Finished."
