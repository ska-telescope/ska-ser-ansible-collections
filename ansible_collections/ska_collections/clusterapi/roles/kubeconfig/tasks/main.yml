---
# load shared vars with clusterapi
- name: Include vars
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_items:
    - ../clusterapi/defaults/main.yml
    - ../configcapo/defaults/main.yml
  tags: [always]

- name: Wait for Cluster
  kubernetes.core.k8s_info:
    kind: Cluster
    api_version: cluster.x-k8s.io/v1beta1
    namespace: "{{ capi_kube_namespace }}"
    name: "{{ capi_cluster }}"
    wait: true
    wait_timeout: "{{ capi_cluster_timeout }}"
    wait_condition:
      type: Ready
  environment:
    KUBECONFIG: "{{ capi_kubeconfig }}"

- name: Save cluster kubeconfig credentials # noqa no-changed-when risky-shell-pipe
  ansible.builtin.shell: |
    kubectl get secret/{{ capi_cluster }}-kubeconfig -o json | \
    jq -r .data.value | \
    base64 --decode
  register: workload_kubeconfig
  environment:
    KUBECONFIG: "{{ capi_kubeconfig }}"

- name: Fail if Workload KUBECONFIG Secret is NOT found
  ansible.builtin.fail:
    msg: "Workload KUBECONFIG Secret is NOT found: secret/{{ capi_cluster }}-kubeconfig: {{ workload_kubeconfig.stderr }}"
  when: "not workload_kubeconfig.stderr.find('Error from server') == -1"
  any_errors_fatal: true

- name: "Remove workload kubeconfig copy {{ capi_config_dir }}/{{ capi_cluster }}-kubeconfig"  # noqa: name[template]
  ansible.builtin.file:
    path: "{{ capi_config_dir }}/{{ capi_cluster }}-kubeconfig"
    state: absent
  become: true

- name: Output workload kubeconfig copy  # noqa: template-instead-of-copy
  ansible.builtin.copy:
    content: "{{ workload_kubeconfig.stdout }}"
    dest: "{{ capi_config_dir }}/{{ capi_cluster }}-kubeconfig"
    mode: 0600
  become: true

- name: Workload cluster kubeconfig
  ansible.builtin.debug:
    var: workload_kubeconfig.stdout
  when: debug

- name: "Remove workload local kubeconfig copy ./{{ capi_cluster }}-kubeconfig"  # noqa: name[template]
  ansible.builtin.file:
    path: "{{ hostvars[item]['capi_kubeconfig_output_dir'] | default(capi_kubeconfig_output_dir) }}/{{ capi_cluster }}-kubeconfig"
    state: absent
  with_inventory_hostnames: "{{ delegate_hosts }}"
  delegate_to: "{{ item }}"
  become: "{{ item != 'localhost' }}"

- name: Output workload local kubeconfig copy  # noqa: template-instead-of-copy
  ansible.builtin.copy:
    content: "{{ workload_kubeconfig.stdout }}"
    dest: "{{ hostvars[item]['capi_kubeconfig_output_dir'] | default(capi_kubeconfig_output_dir) }}/{{ capi_cluster }}-kubeconfig"
    mode: "{{ hostvars[item]['capi_kubeconfig_mode'] | default(capi_kubeconfig_mode) }}"
    owner: "{{ (hostvars[item]['capi_kubeconfig_owner'] | default(capi_kubeconfig_owner)) |
    default(omit if item == 'localhost' else hostvars[item]['ansible_user'], true) }}"
    group: "{{ (hostvars[item]['capi_kubeconfig_group'] | default(capi_kubeconfig_group)) |
    default(omit if item == 'localhost' else hostvars[item]['ansible_user'], true) }}"
  with_inventory_hostnames: "{{ delegate_hosts }}"
  delegate_to: "{{ item }}"
  become: "{{ item != 'localhost' }}"

- name: Flush those handlers
  ansible.builtin.meta: flush_handlers
