- name: Pull thanos query image {{ thanos_docker_tags }}
  community.docker.docker_image:
    name: thanosio/thanos
    tag: "{{ thanos_docker_tags }}"
    source: pull

- name: Stop thanos query container
  community.docker.docker_container:
    name: thanos_query
    stop_timeout: 180
    state: absent

- name: Set fact about thanos query endpoints
  ansible.builtin.set_fact:
    endpoints: "{{ endpoints|default([]) + ['--endpoint=' ~ item] }}"
  loop: "{{ thanos_query_endpoints }}"

- name: Create certificates for server communication
  include_role:
    name: ska_collections.instance_common.certs
  vars:
    private_key_name: "thanos_query"
    certificate_name: "thanos_query"
    dns_alt_name: "{{ thanos_alt_name }}"
    certificates_recreate: true

- name: Create certificates for client communication
  include_role:
    name: ska_collections.instance_common.certs
  vars:
    private_key_name: "thanos_query_client"
    certificate_name: "thanos_query_client"
    dns_alt_name: "{{ thanos_alt_name }}"
    certificates_recreate: true

- name: Generate thanos tls configuration
  become: true
  ansible.builtin.template:
    src: "thanos_query.yaml.j2"
    dest: "{{ thanos_config_dir }}/thanos_query.yaml"
    force: true
    owner: "{{ localuser }}"
    group: "{{ localuser }}"
    mode: 0644

- name: Set fact about thanos query command
  ansible.builtin.set_fact:
    command:
    - "query"
    - "--grpc-address=0.0.0.0:10902"
    - "--http-address=0.0.0.0:9091"
    - "--grpc-server-tls-cert='{{ certificates_dir }}/thanos_query.crt'"
    - "--grpc-server-tls-key='{{ certificates_dir }}/thanos_query.key'"
    - "--grpc-server-tls-client-ca='{{ certificates_dir }}/ca-certificate.crt'"
    - "--grpc-client-tls-cert='{{ certificates_dir }}/thanos_query_client.crt'"
    - "--grpc-client-tls-key='{{ certificates_dir }}/thanos_query_client.key'"
    - "--grpc-client-tls-ca='{{ certificates_dir }}/ca-certificate.crt'"
    - "--grpc-client-tls-secure"
    - "--grpc-client-tls-skip-verify"
    - "--grpc-client-server-name='{{ ansible_hostname }}'"

- name: Set fact about thanos query oci command
  ansible.builtin.set_fact:
    oci_command: "{{ command + endpoints }}"

- name: Print oci_command
  ansible.builtin.debug: var=oci_command

- name: Start thanos query
  community.docker.docker_container:
    name: thanos_query
    image: "thanosio/thanos:{{ thanos_docker_tags }}"
    state: started
    command: "{{ oci_command }}"
    user: root
    restart: true
    restart_policy: always
    ports:
      - "9091:9091"
      - "10902:10902"
    volumes:
      - "/etc/hosts:/etc/hosts:ro"
      - "{{ thanos_config_dir }}:{{ thanos_config_dir }}"
      - "{{ certificates_dir }}:{{ certificates_dir }}"
