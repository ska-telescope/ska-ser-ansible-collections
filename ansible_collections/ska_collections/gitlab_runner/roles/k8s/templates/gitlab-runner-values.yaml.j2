imagePullPolicy: IfNotPresent
gitlabUrl: https://gitlab.com/

unregisterRunners: true

terminationGracePeriodSeconds: 3600

concurrent: {{ gitlab_runner_k8s_runner_concurrent_jobs }}

checkInterval: 3

logLevel: info

rbac:
    create: true

    rules: []
    clusterWideAccess: false

    podSecurityPolicy:
        enabled: false
        resourceNames:
        - gitlab-runner

metrics:
    enabled: true

runners:
    config: |
        [[runners]]
        pre_build_script = """
            echo "This is a pre-build script for SKA."
            echo "Project: ${CI_PROJECT_NAME}"
            echo "Namespace: ${KUBE_NAMESPACE}"
            echo "Agent: ${SKA_AGENT_NAME}"
            if [[ -n "${SKA_AGENT_NAME}" ]]; then
            echo "Agent configuration detected, setting context and creating namespace."
            # kubectl config use-context ${SKA_AGENT_URL}:${SKA_AGENT_NAME}
            # kubectl config set-context --current --namespace=${KUBE_NAMESPACE}
            cp ${{ gitlab_runner_k8s_kubeconfig_name }} $KUBECONFIG # kubeconfig_name - Gitlab SKAO Group CI/CD file
            chmod 600 $KUBECONFIG
            fi
            if [[ ${CI_PROJECT_NAME} == "ska-skampi" ]] && [[ ${KUBE_NAMESPACE} == ci-* || ${KUBE_NAMESPACE} == integration-* ]]; then
                echo "Applying Quotas to the SKAMPI pipeline namespace ${KUBE_NAMESPACE}."
                kubectl get namespace ${KUBE_NAMESPACE} > /dev/null 2>&1 && K_DESC=$? || K_DESC=$?
                if [[ ${K_DESC} -eq 0 ]] && [[ ${KEEP_NAMESPACE} == "true" ]]; then
                    kubectl describe namespace ${KUBE_NAMESPACE};
                else
                    kubectl delete --ignore-not-found namespace ${KUBE_NAMESPACE}
                    kubectl create namespace ${KUBE_NAMESPACE};
                fi
                if [[ -n "${KUBE_NAMESPACE_SDP}" ]]; then
                    kubectl describe namespace ${KUBE_NAMESPACE_SDP} > /dev/null 2>&1 && K_DESC=$? || K_DESC=$?
                    if [[ ${K_DESC} -eq 0 ]] && [[ ${KEEP_NAMESPACE} == "true" ]] ; then
                        kubectl describe namespace ${KUBE_NAMESPACE_SDP}
                    else
                        kubectl delete --ignore-not-found namespace ${KUBE_NAMESPACE_SDP}
                        kubectl create namespace ${KUBE_NAMESPACE_SDP}
                    fi
                fi
                kubectl apply -f resources/namespace_with_quotas.yaml --namespace=${KUBE_NAMESPACE}
            else
                echo "Nothing changed. You can ignore messages above this line."
                if [[ ${CI_PROJECT_NAME} == "ska-skampi" ]] && [[ ${KUBE_NAMESPACE} != staging* ]]; then
                    echo "Non-standard SKAMPI namespace detected, please contact System team."
                fi
            fi
        """
        [runners.kubernetes]
            name = "{{ gitlab_runner_k8s_runner_name }}"
            image = "ubuntu:20.04"
            helper_cpu_request = "100m"
            helper_memory_request = "128Mi"
            service_cpu_request = "100m"
            service_memory_request = "128Mi"
            cpu_request = "1000m"
            memory_request = "2Gi"
            cpu_request_overwrite_max_allowed = "3000m"
            memory_request_overwrite_max_allowed = "8Gi"
            poll_timeout = 600
            namespace = "{{ gitlab_runner_k8s_namespace }}"
            privileged = true
            protected = false
            pull_policy = ["always", "if-not-present"]
        [runners.kubernetes.node_selector]
            "{{ gitlab_runner_k8s_node_selector }}" = "true"
        [runners.cache]
            Type = "s3"
            Shared = true
            [runners.cache.s3]
            ServerAddress = "{{  gitlab_runner_k8s_s3_cache_address }}"
            BucketName = "{{  gitlab_runner_k8s_s3_bucket_name }}"
            BucketLocation = "{{  gitlab_runner_k8s_s3_bucket_location }}"
            Insecure = true
            AuthenticationType = "access-key"
        [runners.kubernetes.volumes]
            [[runners.kubernetes.volumes.host_path]]
            name = "docker"
            mount_path = "/var/run/docker.sock"
            host_path  = "/var/run/docker.sock"

    locked: false

    tags: "{{ gitlab_runner_k8s_tag_list }}"

    runUntagged: false

    protected: false


    cache: {}

    builds: {}
    
    services: {}

    helpers: {}
    
podSecurityContext:
    fsGroup: 65533
    runAsUser: 100

resources: {}
affinity: {}
nodeSelector: 
    {{ gitlab_runner_k8s_node_selector }}: 'true'

tolerations: []
envVars:
- name: RUNNER_NAME
  value: "{{ gitlab_runner_k8s_runner_name }}"
{% if gitlab_runner_envVars is defined %}
{% for var in gitlab_runner_envVars %}
- name: {{ var.name }}
  value: {{ var.value }}
{% endfor %}
{% endif %}

hostAliases: []
podAnnotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-init-first: "true"
    vault.hashicorp.com/agent-inject-status: "update"
    vault.hashicorp.com/agent-inject-secret-accesskey: "{{ gitlab_runner_k8s_s3_access_key_secret_path }}"
    vault.hashicorp.com/secret-volume-path: "/secrets"
    vault.hashicorp.com/agent-inject-template-accesskey: |
        {{ '{{- with secret ' }}"{{ gitlab_runner_k8s_s3_access_key_secret_path }}"{{ ' -}}' }}
        {{ '{{- range $k, $v := .Data.data }}' }}
        {{ '{{- $v }}' }}
        {{ '{{- end }}' }}
        {{ '{{- end }}' }}
    vault.hashicorp.com/agent-inject-secret-secretkey: "{{ gitlab_runner_k8s_s3_secret_key_secret_path }}"
    vault.hashicorp.com/agent-inject-template-secretkey: |
        {{ '{{- with secret ' }}"{{ gitlab_runner_k8s_s3_secret_key_secret_path }}"{{ ' -}}' }}
        {{ '{{- range $k, $v := .Data.data }}' }}
        {{ '{{- $v }}' }}
        {{ '{{- end }}' }}
        {{ '{{- end }}' }}
    vault.hashicorp.com/agent-inject-secret-runner-registration-token: "{{ gitlab_runner_k8s_runner_registration_token }}"
    vault.hashicorp.com/agent-inject-template-runner-registration-token: |
        {{ '{{- with secret ' }}"{{ gitlab_runner_k8s_runner_registration_token }}"{{ ' -}}' }}
        {{ '{{- range $k, $v := .Data.data }}' }}
        {{ '{{- $v }}' }}
        {{ '{{- end }}' }}
        {{ '{{- end }}' }}
    vault.hashicorp.com/role: "{{ gitlab_runner_k8s_vault_role }}"
podLabels: {}
secrets: []
configMaps: {}