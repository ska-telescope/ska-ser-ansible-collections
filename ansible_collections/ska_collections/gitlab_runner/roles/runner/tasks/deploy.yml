---
- name: Create configuration directory
  ansible.builtin.file:
    path: "{{ gitlab_runner_configuration_dir }}"
    state: directory
    mode: 0644

- name: Check if gitlab runner config exists
  ansible.builtin.stat:
    path: "{{ gitlab_runner_configuration_dir }}/config.toml"
  register: config

- name: Create gitlab runner default configuration
  ansible.builtin.template:
    src: config.toml.j2
    dest: "{{ gitlab_runner_configuration_dir }}/default-config.toml"
    mode: 0644
  register: default_config

- name: Set default configuration checksum
  set_fact:
    default_config_checksum: "{{ default_config.checksum }}"
    current_config_checksum: "{{ (config.stat | default({})).checksum | default('') }}"

- name: Create gitlab runner template configuration
  ansible.builtin.template:
    src: config.template.toml.j2
    dest: "{{ gitlab_runner_configuration_dir }}/config.template.toml"
    mode: 0644
  register: config_template

- name: Register runner
  block:
    - name: Unregister existing runner(s)
      ansible.builtin.import_tasks: unregister.yml
      vars:
        gitlab_runner_unregister_all: true

    - name: Register runner
      community.general.docker_container:
        name: "{{ gitlab_runner_name }}-register"
        image: "{{ gitlab_runner_image }}"
        restart_policy: "False"
        command:
          - register
          - --non-interactive
          - --config "/etc/gitlab-runner/default-config.toml"
          - --template-config "/etc/gitlab-runner/config.template.toml"
          - --url "{{ gitlab_runner_url }}"
          - --registration-token "{{ gitlab_runner_registration_token }}"
          - --tag-list "{{ gitlab_runner_tags }}"
          - --name "{{ gitlab_runner_name }}"
          - --executor docker
          - --maintenance-note "{{ gitlab_runner_maintenance_note }}"
          - --run-untagged="{{ gitlab_runner_run_untagged }}"
          - --locked="{{ gitlab_runner_locked }}"
          - --access-level="{{ gitlab_runner_access_level }}"
        state: started
        ulimits:
          - "memlock:-1:-1"
          - "nofile:65536:65536"
        labels: "{{ gitlab_runner_labels }}"
        log_driver: "{{ gitlab_runner_log_driver }}"
        log_options: "{{ gitlab_runner_log_options }}"
        volumes:
          - "{{ gitlab_runner_configuration_dir }}:/etc/gitlab-runner"

    - name: Create gitlab runner configuration with registration
      ansible.builtin.copy:
        src: "{{ gitlab_runner_configuration_dir }}/default-config.toml"
        dest: "{{ gitlab_runner_configuration_dir }}/config.toml"
        remote_src: true
        mode: 0644

  when: not config.stat.exists or config_template.changed or default_config_checksum == config.stat.checksum or gitlab_runner_reregister

- name: Check generated gitlab runner configuration
  ansible.builtin.stat:
    path: "{{ gitlab_runner_configuration_dir }}/config.toml"
  register: config

- name: Validate generated configuration post registration
  ansible.builtin.assert:
    that:
      - default_config_checksum != config.stat.checksum
    fail_msg: "Failed generating {{ gitlab_runner_name }} configuration"
    success_msg: "Generated {{ gitlab_runner_name }} configuration"

- name: "Run {{ gitlab_runner_name }}"
  community.general.docker_container:
    name: "{{ gitlab_runner_name }}"
    image: "{{ gitlab_runner_image }}"
    restart_policy: always
    command:
      - run
      - --config "/etc/gitlab-runner/config.toml"
    state: started
    recreate: "{{ config.stat.checksum != current_config_checksum or gitlab_runner_recreate }} "
    ulimits:
      - "memlock:-1:-1"
      - "nofile:65536:65536"
    labels: "{{ gitlab_runner_labels }}"
    log_driver: "{{ gitlab_runner_log_driver }}"
    log_options: "{{ gitlab_runner_log_options }}"
    ports:
      - "{{ gitlab_runner_metrics_port }}:{{ gitlab_runner_metrics_port }}"
    volumes:
      - "{{ gitlab_runner_configuration_dir }}:/etc/gitlab-runner"
      - /var/run/docker.sock:/var/run/docker.sock
    env: "{{ gitlab_runner_default_env_variables | combine(gitlab_runner_env_variables) }}"
