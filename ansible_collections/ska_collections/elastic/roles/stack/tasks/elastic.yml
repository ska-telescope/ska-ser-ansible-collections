---
# https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
- name: Set vm.max_map_count
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: "262144"
    state: present
  become: true

- name: Create list of nodes to be added into container's /etc/hosts file
  ansible.builtin.set_fact:
    masters_etc_hosts: "{{ masters_etc_hosts|default({}) | combine( {item: hostvars[item].ansible_default_ipv4.address} ) }}"
  with_items: "{{ groups[target_hosts]}}"

- name: Cleans elasticsearch data volume
  ansible.builtin.file:
    path: "{{ elasticsearch_data_dir }}"
    state: absent
  when: elasticsearch_clean_data_volume

- name: Create elasticsearch config
  ansible.builtin.template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch.yml
    mode: 0644

- name: Show elasticsearch config file
  ansible.builtin.command: cat /etc/elasticsearch.yml

- name: "Creates directory {{ elasticsearch_data_dir }}"
  ansible.builtin.file:
    path: "{{ elasticsearch_data_dir }}"
    state: directory
    owner: "{{ ansible_user }}"  # this maps to elasticsearch inside the container
    group: root
    mode: 0755

- name: "Docker pull {{ elasticsearch_image }}"
  community.general.docker_image:
    source: pull
    name: "{{ elasticsearch_image }}"
  register: docker_pull_retry
  until: "docker_pull_retry is not failed"
  retries: 5
  delay: 5

- name: Run Elasticsearch container
  community.general.docker_container:
    name: "{{ elasticsearch_name }}"
    network_mode: "{{ elasticsearch_network_mode }}"  # reverse DNS must work
    privileged: "{{ 'yes' if elasticsearch_network_mode == 'host' else 'no' }}"
    user: elasticsearch
    memory: "{{ elasticsearch_memory }}"
    hostname: "{{ inventory_hostname }}"
    etc_hosts: "{{ masters_etc_hosts }}" # TODO:Review
    restart_policy: false
    image: "{{ elasticsearch_image }}"
    state: started
    ulimits:
      - "memlock:-1:-1"
      - "nofile:65536:65536"
    labels: "{{ elasticsearch_labels }}"
    log_driver: "{{ elasticsearch_log_driver }}"
    log_options: "{{ elasticsearch_log_options }}"
    volumes:
      - "{{ elasticsearch_data_dir }}:/usr/share/elasticsearch/data"
      - /etc/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "{{ elasticsearch_api_port }}:{{ elasticsearch_api_port }}"
      - "{{ elasticsearch_transport_port }}:{{ elasticsearch_transport_port }}"
    env: "{{ elasticsearch_env_defaults | combine(elasticsearch_env_variables) }}"
    recreate: "{{ elasticsearch_reinstall }}"
