# Kibana settings
server.name: "{{ inventory_hostname }}"
server.host: "0.0.0.0"
server.port: {{ kibana_port }}
server.basePath: "{{ kibana_basepath }}"
server.rewriteBasePath: true
server.ssl.enabled: false

# Elasticsearch settings
elasticsearch.serviceAccountToken: "{{ elasticsearch_kibana_token }}"
elasticsearch.ssl.verificationMode: "certificate"
elasticsearch.ssl.alwaysPresentCertificate: true
elasticsearch.ssl.certificate: "/usr/share/kibana/config/certificates/{{ inventory_hostname }}.crt"
elasticsearch.ssl.key: "/usr/share/kibana/config/certificates/{{ inventory_hostname }}.key"
elasticsearch.ssl.certificateAuthorities: [ "/usr/share/kibana/config/certificates/ca-certificate.crt" ]

# Features
monitoring.ui.enabled: true

# XPACK
xpack.security.authc.providers:
  anonymous.anonymous1:
    order: 0
    credentials:
      username: "elastic"
      password: "{{ elasticsearch_password }}"
xpack.reporting.kibanaServer.hostname: localhost
xpack.reporting.encryptionKey: "{{ ansible_date_time.iso8601_micro + 'reporting' | md5 }}"
xpack.security.encryptionKey: "{{ ansible_date_time.iso8601_micro + 'security' | md5 }}"
xpack.encryptedSavedObjects.encryptionKey: "{{ ansible_date_time.iso8601_micro + 'encryptedSavedObjects' | md5 }}"
xpack.monitoring.collection.enabled: true

# Elasticsearch settings
elasticsearch.hosts:
{% for item in (groups[target_hosts ~ '-master'] + groups[target_hosts ~ '-data']) %}
  - https://{{ hostvars[item].ip }}:{{ elasticsearch_api_port }}
{% endfor %}