# Cluster settings
cluster.name: "{{ elasticsearch_cluster_name }}"
discovery.type: "{{ elasticsearch_discovery_type }}"
discovery.seed_hosts:
{% for host in groups[target_hosts ~ '-master'] %}
  - {{ host }}
{% endfor %}
action.auto_create_index: "true"
{% if elasticsearch_first_install %}
cluster.initial_master_nodes:
{% for host in groups[target_hosts ~ '-master'] %}
  - {{ host }}
{% endfor %}
{% endif %}

# Node settings
node.name: "{{ inventory_hostname }}"
node.roles: {{ elasticsearch_node_roles }}
network.bind_host: "0.0.0.0"
network.publish_host: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
http.port: {{ elasticsearch_api_port }}
transport.port: {{ elasticsearch_transport_port }}
bootstrap.memory_lock: "true"
indices.cache.cleanup_interval: "1m"

# Security settings
xpack.security.enabled: "true"

# API
xpack.security.authc.api_key.enabled: "true"

# Transport
xpack.security.transport.ssl.enabled: "true"
xpack.security.transport.ssl.verification_mode: "certificate"
xpack.security.transport.ssl.key: "/usr/share/elasticsearch/config/certificates/{{ inventory_hostname }}.key"
#xpack.security.transport.ssl.key_passphrase: "{{ ca_cert_password }}"
xpack.security.transport.ssl.certificate: "/usr/share/elasticsearch/config/certificates/{{ inventory_hostname }}.crt"
xpack.security.transport.ssl.certificate_authorities: [ "/usr/share/elasticsearch/config/certificates/ca-certificate.crt" ]
xpack.security.transport.ssl.client_authentication: "required"

# HTTP
xpack.security.http.ssl.enabled: "true"
xpack.security.http.ssl.key: "/usr/share/elasticsearch/config/certificates/{{ inventory_hostname }}.key"
#xpack.security.http.ssl.key_passphrase: "{{ ca_cert_password }}"
xpack.security.http.ssl.certificate: "/usr/share/elasticsearch/config/certificates/{{ inventory_hostname }}.crt"
xpack.security.http.ssl.certificate_authorities: [ "/usr/share/elasticsearch/config/certificates/ca-certificate.crt" ]
xpack.security.http.ssl.client_authentication: "required"