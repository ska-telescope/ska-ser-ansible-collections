name: {{ inventory_hostname }}

filebeat:
  inputs:
    - type: journald
      id: everything
      paths: []
      seek: cursor
      cursor_seek_fallback: tail
{% if log_kubernetes|bool %}
    - type: container
      symlinks: true
      kube_config: /kube_config
      paths:
        - /var/log/containers/*.log
      exclude_files: ['\.gz$']
      exclude_lines: ["^\\s+[\\-`('.|_]"]  # drop asciiart lines
      processors:
      - add_kubernetes_metadata:
          kube_config: /kube_config
          host: {{ inventory_hostname }}
          default_matchers.enabled: false
          matchers:
          - logs_path:
              logs_path: "/var/log/containers/"
# get rid of all fluentd related logs
      - drop_event:
          when:
            or:
              - equals:
                  kubernetes.container.name: fluentd
              - equals:
                  container.labels.io_kubernetes_container_name: fluentd
              - regexp:
                  kubernetes.pod.name: "fluentd"
      - add_fields:
          target: ''
          fields:
            ska.environment: {{ ska_environment }}
            ska.service: {{ ska_service }}
            ska.deployment: {{ ska_deployment }}
            ska.application: kubernetes
{% endif %}
{% if log_docker|bool %}
    - type: docker
      combine_partial: true
      exclude_files: ['\.gz$']
      exclude_lines: ["^\\s+[\\-`('.|_]"]  # drop asciiart lines
      containers:
        path: "/var/lib/docker/containers"
        stream: "stdout"
        ids:
          - "*"
      processors:
      - add_docker_metadata:
          host: "unix:///var/run/docker.sock"
# get rid of all filebeat/journalbeat related logs
      - drop_event:
          when:
              and:
                - equals:
                    docker.container.name: {{ filebeat_name }}

      - add_fields:
          target: ''
          fields:
            ska.environment: {{ ska_environment }}
            ska.service: {{ ska_service }}
            ska.deployment: {{ ska_deployment }}
            ska.application: docker
{% endif %}

output:
  elasticsearch:
    hosts:
{% for adr in logging_elasticsearch_addresses %}
      - {{ adr }}
{% endfor %}
    ssl.certificate_authorities: ["{{ certificates_dir }}/ca-certificate.crt"]
    ssl.certificate: "{{ certificates_dir }}/{{ certificate_name }}.crt" # certificate for SSL client authentication to be copied from terminus
    ssl.key: "{{ certificates_dir }}/{{ certificate_name }}.key" # client certificate key to be copied from terminus
    loadbalance: true
    worker: 1
    # bulk_max_size: 100
    # compression_level: 9 # no - as this is bad for CPU
    index: "filebeat-%{[agent.version]}"
    # index: "filebeat"
{% if filebeat_pipeline|length %}
    pipeline: {{ filebeat_pipeline }}
{% endif %}

# https://www.elastic.co/guide/en/beats/filebeat/master/ilm.html#setup-ilm-check_exists-option
setup.ilm.enabled: auto # not sure!!! should go for true
# setup.ilm.rollover_alias: "filebeat"
setup.ilm.rollover_alias: "filebeat-%{[agent.version]}"
setup.ilm.pattern: "{now/d}-000001"
setup.ilm.check_exists: true
setup.ilm.overwrite: false
setup.ilm.policy_name: "filebeat"
setup.ilm.policy_file: /etc/beat_policy.json
# setup.template.name: "filebeat-%{[agent.version]}" # version not needed as auto appended
setup.template.name: "filebeat" # probably ignored because of setup.ilm.enabled
# setup.template.pattern: "filebeat-%{[agent.version]}-*" # version not needed as auto appended
setup.template.pattern: "filebeat-*" # probably ignored because of setup.ilm.enabled
setup.template.enabled: true
# setup.template.overwrite: {{ filebeat_template_overwrite | string | lower }}
setup.template.overwrite: true
{% if filebeat_pipeline|length %}
setup.template.settings:
  index.default_pipeline: "{{ filebeat_pipeline }}"
{% endif %}
setup.template.append_fields:
- name: ska_function
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_line_loc
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_log_message
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_log_timestamp
  type: date
- name: ska_severity
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_tags
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_thread_id
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_version
  type: text
  multi_fields:
    - type: keyword
      name: keyword
- name: ska_transaction_id
  type: text
  multi_fields:
    - type: keyword
      name: keyword

setup.kibana.host: "{{ ansible_default_ipv4.address }}:5601"
