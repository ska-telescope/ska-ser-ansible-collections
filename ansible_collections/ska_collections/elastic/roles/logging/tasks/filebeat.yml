---
- name: Podman container setup operations
  block:
  - name: Pull image for filebeat
    containers.podman.podman_image:
      name: "{{ filebeat_image }}"

  - name: Remove filebeat containers
    containers.podman.podman_container:
      name: "{{ filebeat_name }}"
      state: absent
  when: filebeat_container_engine == "podman"

- name: Docker container setup operations
  block:
  - name: Pull image for filebeat
    community.general.docker_image:
      name: "{{ filebeat_image }}"
      source: pull

  - name: Remove filebeat containers
    community.general.docker_container:
      name: "{{ filebeat_name }}"
      state: absent
  when: filebeat_container_engine == "docker"

- name: Write filebeat config
  ansible.builtin.template:
    src: filebeat.yaml.j2
    dest: /etc/filebeat.yaml
    mode: 0644

- name: Write filebeat policy config
  ansible.builtin.template:
    src: policy.json.j2
    dest: /etc/beat_policy.json
    mode: 0644

- name: Certificates role
  ansible.builtin.include_role:
    name: ska_collections.instance_common.certs
  vars:
    private_key_name: "{{ filebeat_private_key_name }}"
    certificate_name: "{{ filebeat_certificate_name }}"
    dns_alt_name: "{{ filebeat_dns_alt_name }}"

- name: Scope for update pipeline
  block:
  - name: Write ska_log_parsing_pipeline config
    ansible.builtin.template:
      src: ska_log_parsing_pipeline.json.j2
      dest: /etc/ska_log_parsing_pipeline.json
      mode: 0644
    register: ska_log_parsing_pipeline_conf

  - name: Slurp /etc/ska_log_parsing_pipeline.json file
    ansible.builtin.slurp:
      src: /etc/ska_log_parsing_pipeline.json
    register: ska_log_parsing_pipeline_file

  - name: Update pipeline config
    ansible.builtin.uri:
      url: "{{ logging_loadbalancer_address }}/_ingest/pipeline/{{ filebeat_pipeline }}"
      client_cert: "{{ certificates_dir }}/{{ filebeat_certificate_name }}.crt"
      client_key: "{{ certificates_dir }}/{{ filebeat_private_key_name }}.key"
      method: PUT
      return_content: true
      body: "{{ ska_log_parsing_pipeline_file['content'] | b64decode }}"
      status_code: 200
      body_format: json
    environment:
      SSL_CERT_FILE: "{{ certificates_dir }}/ca-certificate.crt"
    when: ska_log_parsing_pipeline_conf.changed
  when: filebeat_pipeline

- name: Scope for index initialisation
  block:
  - name: Write filebeat config
    ansible.builtin.template:
      src: filebeat.yaml.j2
      dest: /etc/filebeat_setup.yaml
      mode: 0644
    register: filebeat_conf
    vars:
      filebeat_template_overwrite: true
  when: "'elkmasters' in groups and inventory_hostname == groups['elkmasters'][0]"

- name: Creates directory for /var/lib/filebeat
  ansible.builtin.file:
    path: "/var/lib/filebeat"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Check if meta.json file exists
  ansible.builtin.stat:
    path: /var/lib/filebeat/meta.json
  register: meta_json

- name: Set version file for filebeat
  ansible.builtin.lineinfile:
    line: '{"version": "1"}'
    dest: /var/lib/filebeat/meta.json
    create: true
    owner: root
    group: root
    mode: 0644
  when: not meta_json.stat.exists

- name: Podman filebeat deployment
  block:
  - name: Deploy elasticstack filebeat with k8s
    containers.podman.podman_container:
      name: "{{ filebeat_name }}"
      image: "{{ filebeat_image }}"
      command: "filebeat -e -strict.perms=false -c /etc/filebeat.yaml"
      restart_policy: always
      network_mode: host
      user: root
      memory: "512M"
      labels: "{{ container_labels }}"
      log_driver: "{{ log_driver }}"
      log_options: "{{ log_options }}"
      volumes:
      - "/var/log:/var/log:ro"  # symlinks to pod logs and container logs
      - "/var/run/docker.sock:/var/run/docker.sock:Z"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"  # docker logs
      - "/var/lib/kubelet/pods:/var/lib/kubelet/pods:ro"  # kubernetes containers
      - "/var/lib/filebeat:/usr/share/filebeat/data/registry/filebeat:rw"  # persistent registry
      - "/etc/hostname:/etc/hostname:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
      - "/etc/filebeat.yaml:/etc/filebeat.yaml:ro"
      - "/etc/beat_policy.json:/etc/beat_policy.json:ro"
      - "{{ kubeconf_file }}:/kube_config:ro"
      - "/var/log/journal:/var/log/journal:ro"  # journal databases
      - "/run/systemd:/run/systemd:ro"
      - "/etc/pki/:/etc/pki/"
    when: log_kubernetes

  - name: Deploy elasticstack filebeat without k8s
    containers.podman.podman_container:
      name: "{{ filebeat_name }}"
      image: "{{ filebeat_image }}"
      command: "filebeat -e -strict.perms=false -c /etc/filebeat.yaml"
      restart_policy: always
      network_mode: host
      user: root
      memory: "512M"
      labels: "{{ container_labels }}"
      log_driver: "{{ log_driver }}"
      log_options: "{{ log_options }}"
      volumes:
      - "/var/log:/var/log:ro"  # symlinks to pod logs and container logs
      - "/var/run/docker.sock:/var/run/docker.sock:Z"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"  # docker logs
      - "/var/lib/filebeat:/usr/share/filebeat/data/registry/filebeat:rw"  # persistent registry
      - "/etc/hostname:/etc/hostname:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
      - "/etc/filebeat.yaml:/etc/filebeat.yaml:ro"
      - "/etc/beat_policy.json:/etc/beat_policy.json:ro"
      - "/var/log/journal:/var/log/journal:ro"  # journal databases
      - "/run/systemd:/run/systemd:ro"
      - "/etc/pki/:/etc/pki/"
    when: not log_kubernetes
  when: filebeat_container_engine == "podman"
  tags:
  - filebeat

- name: Docker filebeat deployment
  block:
  - name: Deploy elasticstack filebeat with k8s
    community.general.docker_container:
      name: "{{ filebeat_name }}"
      image: "{{ filebeat_image }}"
      command: "filebeat -e -strict.perms=false -c /etc/filebeat.yaml"
      restart_policy: always
      network_mode: host
      user: root
      memory: "512M"
      labels: "{{ container_labels }}"
      log_driver: "{{ log_driver }}"
      log_options: "{{ log_options }}"
      volumes:
      - "/var/log:/var/log:ro"  # symlinks to pod logs and container logs
      - "/var/run/docker.sock:/var/run/docker.sock:Z"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"  # docker logs
      - "/var/lib/kubelet/pods:/var/lib/kubelet/pods:ro"  # kubernetes containers
      - "/var/lib/filebeat:/usr/share/filebeat/data/registry/filebeat:rw"  # persistent registry
      - "/etc/hostname:/etc/hostname:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
      - "/etc/filebeat.yaml:/etc/filebeat.yaml:ro"
      - "/etc/beat_policy.json:/etc/beat_policy.json:ro"
      - "{{ kubeconf_file }}:/kube_config:ro"
      - "/var/log/journal:/var/log/journal:ro"  # journal databases
      - "/run/systemd:/run/systemd:ro"
      - "/etc/pki/:/etc/pki/"
    when: log_kubernetes

  - name: Deploy elasticstack filebeat without k8s
    community.general.docker_container:
      name: "{{ filebeat_name }}"
      image: "{{ filebeat_image }}"
      command: "filebeat -e -strict.perms=false -c /etc/filebeat.yaml"
      restart_policy: always
      network_mode: host
      user: root
      memory: "512M"
      labels: "{{ container_labels }}"
      log_driver: "{{ log_driver }}"
      log_options: "{{ log_options }}"
      volumes:
      - "/var/log:/var/log:ro"  # symlinks to pod logs and container logs
      - "/var/run/docker.sock:/var/run/docker.sock:Z"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"  # docker logs
      - "/var/lib/filebeat:/usr/share/filebeat/data/registry/filebeat:rw"  # persistent registry
      - "/etc/hostname:/etc/hostname:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
      - "/etc/filebeat.yaml:/etc/filebeat.yaml:ro"
      - "/etc/beat_policy.json:/etc/beat_policy.json:ro"
      - "/var/log/journal:/var/log/journal:ro"  # journal databases
      - "/run/systemd:/run/systemd:ro"
      - "/etc/pki/:/etc/pki/"
    when: not log_kubernetes
  when: filebeat_container_engine == "docker"
  tags:
  - filebeat
