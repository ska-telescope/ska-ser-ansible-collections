#!/usr/bin/env ansible-playbook
---
- name: "Show debug info"
  hosts: "{{ target_hosts }}"
  become: true
  tasks:
    - name: "Show stack nodes info"
      debug: var=hostvars[inventory_hostname]
      when: debug

- name: "Apply the common and docker roles"
  hosts: "{{ target_hosts }}"
  become: true
  roles:
    - ska_collections.instance_common.init
    - ska_collections.docker_base.docker

- name: Verify Elastic Cluster for bootstraping
  hosts: "{{ target_hosts }}-master[0]"
  tasks:
    - name: Get health
      uri:
        url: http://localhost:9200/_cluster/health
        return_content: true
        status_code: [200]
      register: response_health
      ignore_errors: true

    - name: Print health response - debug mode
      debug:
        msg: "{{ response_health }}"
         
      
    - name: Set elastic_first_install fact on all hosts
      set_fact:
        elastic_first_install: "{{ (response_health.status | default(0)) != 200 }}"
      delegate_to: "{{ item }}"
      with_items: "{{ target_hosts }}"

- name: "Master Elastic tasks"
  hosts: "{{ target_hosts }}-master"
  become: true
  tasks:

    - name: Install Elastic
      ansible.builtin.import_role:
        name: ska_collections.elastic.stack
        tasks_from: elastic
      when: '((groups[target_hosts + "-data"] | default([])) | length ) == 0'
    
    - name: Install Master-only Elastic
      ansible.builtin.import_role:
        name: ska_collections.elastic.stack
        tasks_from: elastic
      vars:
        node_roles: ["master","remote_cluster_client","transform","ml","ingest"]
      when: '((groups[target_hosts + "-data"] | default([])) | length ) > 0'
        
    - name: Install Kibana on Master0 if Kibana only instance is missing
      ansible.builtin.import_role:
        name: ska_collections.elastic.stack
        tasks_from: kibana
      vars:
        kibana_on_master: true

      when: '((groups[target_hosts + "-kibana"] | default([])) | length ) == 0'

- name: "Data Elastic tasks"
  hosts: "{{ target_hosts }}-data"
  become: true
  tasks:
  
    - name: Install Elastic Data nodes
      ansible.builtin.import_role:
        name: ska_collections.elastic.stack
        tasks_from: elastic
      vars:
        node_roles: ["data"]

- hosts: "{{ target_hosts }}-loadbalancer"
  become: true
  roles:
    - haproxy
  
- name: Kibana tasks
  hosts: "{{ target_hosts }}-kibana"
  become: true
  tasks:
    - name: Install Kibana on Kibana-only instances
      ansible.builtin.import_role:
        name: ska_collections.elastic.stack
        tasks_from: kibana
  


