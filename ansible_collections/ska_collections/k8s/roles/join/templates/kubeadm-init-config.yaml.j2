---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ ansible_default_ipv4.address }}
  bindPort: 6443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: {% if k8s_activate_containerd %}unix:///run/containerd/containerd.sock{% else %}/var/run/dockershim.sock{% endif %}

  imagePullPolicy: IfNotPresent
  name: {{ ansible_hostname }}
{% if inventory_hostname in groups['kubernetes-workers'] %}
  # Prevent kubeadm from adding a control plane taint, because this node is also a worker
  taints: []
{% else %}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
{% endif %}
#  kubeletExtraArgs:
#    resolv-conf: /run/systemd/resolve/resolv.conf
#    network-plugin: cni
#    cgroup-driver: "cgroupfs"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v{{ k8s_version }}
apiServer:
  certSANs:
  - 127.0.0.1
  - {{ k8s_cluster_api_address }}
  - {{ k8s_cluster_hostname }}
{% if k8s_dns_entry|bool %}
  - {{ k8s_dns_entry }}
{% endif %}
{% if k8s_external_dns_entry|bool %}
  - {{ k8s_external_dns_entry }}
{% endif %}
{% for item in groups['kubernetes-controlplane'] %}
  - {{ hostvars[item].k8s_internal_ip|default(hostvars[item].ansible_host) }}
  - {{ hostvars[item].k8s_internal_ip|default(hostvars[item].ansible_host) }}.{{ k8s_cluster_domain }}
  - {{ hostvars[item].ansible_default_ipv4.address }}
{% endfor %}
  extraArgs:
    authorization-mode: Node,RBAC
    oidc-issuer-url: {{ k8s_oidc_issuer_url }}
    oidc-username-claim: {{ k8s_oidc_username_claim }}
    oidc-client-id: {{ k8s_oidc_client_id }}
    service-account-issuer: "https://kubernetes.default.svc.{{ k8s_cluster_domain }}"
    service-account-signing-key-file: "/etc/kubernetes/pki/sa.key"
    service-account-key-file: "/etc/kubernetes/pki/sa.pub"
# enable default tolerations to
# https://dbafromthecold.com/2020/04/08/adjusting-pod-eviction-time-in-kubernetes/
    enable-admission-plugins: DefaultTolerationSeconds
    default-not-ready-toleration-seconds: "120"
    default-unreachable-toleration-seconds: "120"
  timeoutForControlPlane: 5m0s
#  extraArgs:
#    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
clusterName: kubernetes
certificatesDir: /etc/kubernetes/pki
controlPlaneEndpoint: {{ k8s_cluster_api_address }}:6443
# https://dbafromthecold.com/2020/04/08/adjusting-pod-eviction-time-in-kubernetes/
controllerManager:
  extraArgs:
    "pod-eviction-timeout": "3m0s"
dns: {}
etcd:
  local:
    dataDir: /var/lib/k8s/etcd
networking:
  dnsDomain: {{ k8s_cluster_domain }}
  podSubnet: "{{ k8s_pod_network_cidr }}"
  serviceSubnet: 10.96.0.0/12
scheduler: {}
---
# https://godoc.org/k8s.io/kubelet/config/v1beta1#KubeletConfiguration
# https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
maxPods: 250
kubeAPIQPS: 10  # default 5
kubeAPIBurst: 20 # default 10
failSwapOn: false
resolvConf: /run/systemd/resolve/resolv.conf
clusterDNS:
- "10.96.0.10"
{% for item in k8s_dns_servers %}
- "{{ item }}"
{% endfor %}
- "8.8.8.8"
imageGCHighThresholdPercent: 85
imageGCLowThresholdPercent: 80
evictionHard:
  nodefs.available: "10%"
  nodefs.inodesFree: "5%"
  imagefs.available: "10%"
  imagefs.inodesFree: "5%"
  memory.available: "100Mi"
evictionMinimumReclaim:
  nodefs.available: "500Mi"
  imagefs.available: "1Gi"
  memory.available: "0Mi"
systemReserved:
  cpu: "100m"
  memory: "128M"
  ephemeral-storage: "2Gi"
kubeReserved:
  cpu: "100m"
  memory: "128M"
  ephemeral-storage: "2Gi"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
metricsBindAddress: "0.0.0.0"
