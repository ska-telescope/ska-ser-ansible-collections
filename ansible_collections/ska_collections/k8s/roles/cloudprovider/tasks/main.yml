---

- name: Clusterapi OS cloud config
  ansible.builtin.import_role:
    name: ska_collections.clusterapi.createworkload
    tasks_from: os_config

- name: "Show slurped_cloud_config"
  ansible.builtin.debug:
    var: slurped_cloud_config

- name: Decode Clusterapi cloud config and store as fact
  ansible.builtin.set_fact:
    k8s_cloudprovider_config_ini: "{{ slurped_cloud_config.content | b64decode }}"

- name: "Show k8s_cloudprovider_config_ini"
  ansible.builtin.debug:
    var: k8s_cloudprovider_config_ini

- name: Check Cloud Config Secret exist
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: cloud-config
    namespace: kube-system
  register: k8s_cloudprovider_secret_check

- name: Install Cloud Provider Cloud Config Secret
  when: "not k8s_cloudprovider_secret_check.resources"
  block:
    - name: Create Cloud Config Secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: cloud-config
            namespace: kube-system
          data:
            cloud.conf: "{{ slurped_cloud_config.content }}"

- name: Tidy up Cloud Provider manifests
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - "cloud-controller-manager-roles.yaml"
    - "cloud-controller-manager-role-bindings.yaml"
    - "openstack-cloud-controller-manager-ds.yaml"

- name: Download Cloud Provider manifests
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/kubernetes/cloud-provider-openstack/master/manifests/controller-manager/{{ item }}"
    dest: "/tmp/{{ item }}"
    mode: '0664'
  with_items:
    - "cloud-controller-manager-roles.yaml"
    - "cloud-controller-manager-role-bindings.yaml"
    - "openstack-cloud-controller-manager-ds.yaml"

- name: Apply Cloud Provider manifests
  kubernetes.core.k8s:
    state: present
    apply: true
    src: "/tmp/{{ item }}"
  with_items:
    - "cloud-controller-manager-roles.yaml"
    - "cloud-controller-manager-role-bindings.yaml"
    - "openstack-cloud-controller-manager-ds.yaml"

- name: Add cloud provider chart repo
  kubernetes.core.helm_repository:
    name: cpo
    repo_url: "https://kubernetes.github.io/cloud-provider-openstack"

  # https://github.com/kubernetes/cloud-provider-openstack/blob/master/examples/cinder-csi-plugin/block/block.yaml
  # helm repo add cpo https://kubernetes.github.io/cloud-provider-openstack
  # helm repo update
  # helm upgrade --create-namespace --namespace kube-system --install cinder-csi cpo/openstack-cinder-csi

- name: Apply cloud provider chart
  kubernetes.core.helm:
    name: cinder-csi
    chart_ref: cpo/openstack-cinder-csi
    release_namespace: kube-system
    create_namespace: false
    update_repo_cache: true
    force: true

- name: Check Storage Classes exist
  kubernetes.core.k8s_info:
    api_version: v1
    kind: StorageClass
    name: cinder-block
  register: k8s_cloudprovider_sc_check

- name: Install Cloud Provider Storage Classes
  when: "not k8s_cloudprovider_sc_check.resources"
  block:
    - name: Apply Cloud Provider storage classes
      kubernetes.core.k8s:
        state: present
        apply: true
        definition: "{{ item }}"
      with_items: "{{ k8s_cloudprovider_storage_classes }}"

- name: Flush those handlers
  ansible.builtin.meta: flush_handlers
