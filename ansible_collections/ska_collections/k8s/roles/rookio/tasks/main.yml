---
- name: Include ceph config tasks
  ansible.builtin.include_tasks: "ceph_config.yml"

- name: Setup environment
  ansible.builtin.set_fact:
    k8s_rook_cluster_environment:
      KUBE_NAMESPACE: "{{ k8s_kube_namespace }}"
      ROOK_NAMESPACE: "{{ k8s_rook_namespace }}"
      ROOK_EXTERNAL_FSID: "{{ rook_conf.ceph_external_fsid }}"
      ROOK_EXTERNAL_ADMIN_USER_NAME: "{{ k8s_rook_ceph_admin_user_name }}"
      ROOK_EXTERNAL_ADMIN_SECRET: "{{ rook_conf.ceph_admin_secret }}"
      ROOK_EXTERNAL_CEPH_MON_DATA: "{{ rook_conf.ceph_mon_data }}"
      ROOK_EXTERNAL_CEPH_MONITORS: "{{ rook_conf.ceph_monitors }}"
      RBD_POOL_NAME: "{{ k8s_rook_rbd_pool_name }}"
      CSI_RBD_NODE_SECRET_NAME: "{{ k8s_rook_csi_rbd_node_secret_name }}"
      CSI_RBD_PROVISIONER_SECRET_NAME: "{{ k8s_rook_csi_rbd_provisioner_secret_name }}"
      CSI_CEPHFS_NODE_SECRET_NAME: "{{ k8s_rook_csi_cephfs_node_secret_name }}"
      CSI_CEPHFS_PROVISIONER_SECRET_NAME: "{{ k8s_rook_csi_cephfs_provisioner_secret_name }}"
      CSI_RBD_NODE_SECRET: "{{ rook_conf.csi_rbd_node_secret }}"
      CSI_RBD_PROVISIONER_SECRET: "{{ rook_conf.csi_rbd_provisioner_secret }}"
      CSI_CEPHFS_NODE_SECRET: "{{ rook_conf.csi_cephfs_node_secret }}"
      CSI_CEPHFS_PROVISIONER_SECRET: "{{ rook_conf.csi_cephfs_provisioner_secret }}"
      ROOK_VERSION: "{{ k8s_rook_version }}"
      KUBECONFIG: "{{ k8s_kubeconfig }}"
      NAMESPACE: "{{ k8s_rook_namespace }}"

- name: Check k8s_rook_cluster_environment
  ansible.builtin.debug:
    var: k8s_rook_cluster_environment
  when: debug

- name: Check Rook is running
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: rook-ceph-operator
    namespace: "{{ k8s_rook_namespace }}"
  register: rook_operator_check

- name: Deploy Rook IO
  block:
    - name: Download Rook IO manifests
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/rook/rook/{{ k8s_rook_version }}/deploy/examples/{{ item }}"
        dest: "/tmp/rook-{{ item }}"
        mode: 0664
      with_items:
        - "crds.yaml"
        - "common.yaml"
        - "operator.yaml"

    - name: Apply Rook IO crds
      kubernetes.core.k8s:
        state: present
        src: "/tmp/rook-crds.yaml"

    - name: Apply Rook IO manifests
      kubernetes.core.k8s:
        state: present
        apply: true
        src: "/tmp/rook-{{ item }}"
      with_items:
        - "common.yaml"
        - "operator.yaml"

- name: Wait for deploy/rook-ceph-operator
  kubernetes.core.k8s_info:
    kind: Deployment
    api_version: apps/v1
    name: rook-ceph-operator
    namespace: "{{ k8s_rook_namespace }}"
    wait: true
    wait_sleep: 10
    wait_timeout: 300
    wait_condition:
      type: Available

- name: Download Rook import external cluster script
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/rook/rook/{{ k8s_rook_version }}/deploy/examples/import-external-cluster.sh"
    dest: "/tmp/rook-import-external-cluster.sh"
    mode: 0664

- name: Check Rook Config Secret exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: rook-ceph-mon
    namespace: "{{ k8s_rook_namespace }}"
  register: rook_secret_check

- name: Run import-external-cluster.sh to create Secrets, ConfigMaps and StorageClasses
  ansible.builtin.command: /usr/bin/bash /tmp/rook-import-external-cluster.sh
  environment: "{{ k8s_rook_cluster_environment }}"
  changed_when: true # TODO make this accurate
  failed_when: false

- name: Fix Rook secrets script
  ansible.builtin.template:
    src: rookio-fix-secrets.sh.j2
    dest: "/tmp/rookio-fix-secrets.sh"
    mode: 0744

- name: Fix Rook secrets
  ansible.builtin.command: /usr/bin/bash /tmp/rookio-fix-secrets.sh
  environment: "{{ k8s_rook_cluster_environment }}"
  changed_when: true # TODO make this accurate
  failed_when: false

- name: Check CephCluster exist
  kubernetes.core.k8s_info:
    api_version: ceph.rook.io/v1
    kind: CephCluster
    name: "{{ k8s_rook_namespace }}"
    namespace: "{{ k8s_rook_namespace }}"
  register: cephcluster_check

- name: Compare Ceph and CephCluster versions
  when: "k8s_rook_ceph_image_update and cephcluster_check.resources"
  block:
    - name: Get CephCluster object definition
      kubernetes.core.k8s_info:
        api_version: ceph.rook.io/v1
        kind: CephCluster
        name: "{{ k8s_rook_namespace }}"
        namespace: "{{ k8s_rook_namespace }}"
      register: cephcluster

    - name: Set ceph_version fact
      ansible.builtin.set_fact:
        ceph_version: "v{{ cephcluster.resources[0].status.ceph.versions.overall.keys() | first | regex_search('[0-9]+[.][0-9]+[.][0-9]+') }}"

    - name: Set ceph_image fact
      ansible.builtin.set_fact:
        ceph_image: "quay.io/ceph/ceph:{{ ceph_version }}"

    - name: Validate versions
      when:
        - "k8s_rook_ceph_image != ceph_image"
      block:
        - name: Query to match CephCluster image to Ceph cluster version
          ansible.builtin.pause:
            prompt: >
              Ceph cluster is on version {{ ceph_version }} and you have requested a different one.
              Update k8s_rook_ceph_image to match this version? [yes/no]
            echo: true
          register: prompt

        - name: Set k8s_rook_ceph_image version
          ansible.builtin.set_fact:
            k8s_rook_ceph_image: "{{ ceph_image }}"
          when: prompt.user_input == 'yes'

- name: Install CephCluster
  when: "k8s_rook_ceph_image_update or not cephcluster_check.resources"
  block:
    - name: Deploy CephCluster
      kubernetes.core.k8s:
        state: present
        template: "cephcluster.yaml.j2"

- name: Check Storage Classes exist
  kubernetes.core.k8s_info:
    api_version: v1
    kind: StorageClass
    name: nfss1
  register: nfss1_sc_check

- name: Install Ceph Storage Classes
  when: "not nfss1_sc_check.resources"
  block:
    - name: Deploy Ceph StorageClasses
      kubernetes.core.k8s:
        state: present
        template: "ceph-storageclasses.yaml.j2"

- name: Check CephCluster is connected
  kubernetes.core.k8s_info:
    api_version: ceph.rook.io/v1
    kind: CephCluster
    name: "{{ k8s_rook_namespace }}"
    namespace: "{{ k8s_rook_namespace }}"
    wait: true
    wait_timeout: 180
    wait_condition:
      type: Connected

- name: Flush those handlers
  ansible.builtin.meta: flush_handlers
