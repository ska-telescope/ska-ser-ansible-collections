---
- name: Test ingress controller
  hosts: "{{ target_hosts }}"
  vars:
    target_hosts: localhost
    nginx_ingress_lb_service_name: "ingress-nginx-controller-lb-{{ k8s_ingress_lb_suffix | default('test') }}"
  environment:
    KUBECONFIG: "{{ k8s_kubeconfig | default(lookup('ansible.builtin.env', 'KUBECONFIG', default='/etc/kubernetes/admin.conf')) }}"
  tasks:
    - name: Wait till nginx is created
      kubernetes.core.k8s_info:
        kind: Service
        wait: true
        name: "{{ nginx_ingress_lb_service_name }}"
        namespace: ingress-nginx
        wait_timeout: 10
      register: ingress_nginx_controller
      failed_when: (ingress_nginx_controller.resources) | length == 0

    - name: Wait till nginx loadbalancer ip is associated
      kubernetes.core.k8s_info:
        kind: Service
        wait: true
        name: "{{ nginx_ingress_lb_service_name }}"
        namespace: ingress-nginx
        wait_timeout: 10
      register: ingress_nginx_controller
      until: ingress_nginx_controller.resources[0].status.loadBalancer.ingress is defined
      retries: 6
      delay: 10
      when: ingress_nginx_controller

    - name: Check ingress-nginx-controller
      ansible.builtin.debug:
        var: ingress_nginx_controller
      when: debug

    - name: Apply test ingress
      kubernetes.core.k8s:
        state: present
        template: 'resources/ingress.yml'

    - name: Wait till pod is created
      kubernetes.core.k8s_info:
        kind: Pod
        wait: true
        name: banana-app
        namespace: default
        wait_timeout: 120

    - name: Test test ingress
      ansible.builtin.uri:
        url: "http://{{ ingress_nginx_controller.resources[0].status.loadBalancer.ingress[0].ip }}/banana"
        method: GET
        status_code: [200]
      register: test_ingress
      until: test_ingress.status == 200
      retries: 6
      delay: 10

    - name: Delete test ingress
      kubernetes.core.k8s:
        state: absent
        template: 'resources/ingress.yml'
  tags:
    - ingress
