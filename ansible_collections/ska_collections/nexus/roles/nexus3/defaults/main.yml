---
nexus_ntp_service: chrony

nexus_version: 3.47.1-01
nexus_upgrade: true
nexus_data_dir: /var/lib/nexus/data
nexus_installation_dir: /var/lib/nexus/nexus
nexus_heap_size: "2703M" # https://help.sonatype.com/repomanager3/product-information/system-requirements
nexus_backup_rotate: true
nexus_backup_keep_rotations: 2

nexus_default_port: 8881
nexus_docker_hosted_port: 9080
nexus_docker_proxy_port: 9081
nexus_docker_group_port: 9082
nexus_docker_quarantine_port: 9083
nexus_central_proxy_port: 9084
nexus_gitlab_proxy_port: 9085

nexus_admin_password: "{{ _ | mandatory('`nexus_admin_password` definition is mandatory') }}"
nexus_default_admin_password: "{{ nexus_admin_password }}"
nexus_gitlab_password: "{{ _ | mandatory('`nexus_gitlab_password` definition is mandatory') }}"
nexus_publisher_password: "{{ _ | mandatory('`nexus_publisher_password` definition is mandatory') }}"
nexus_quarantiner_password: "{{ _ | mandatory('`nexus_quarantiner_password` definition is mandatory') }}"
nexus_anonymous_access: true

nexus_public_hostname: nexus.skao.int
nexus_public_scheme: http
nexus_npm_bearer_token_realm: true
nexus_docker_bearer_token_realm: true

nexus_email_server_enabled: false
nexus_email_server_host: mailrelay.skatelescope.org
nexus_email_server_port: 587
nexus_email_server_password: "{{ _ | mandatory('`nexus_email_server_password` definition is mandatory') }}"
nexus_email_from_address: nexus-artefact@skatelescope.org
nexus_email_subject_prefix: "[Nexus]"
nexus_email_tls_enabled: true

nexus_channel_email_address: prometheus-alerts-aaaab4hruv46exq5oy5mqhl6ea@skasoftware.slack.com
nexus_webhook_secret_key: "{{ _ | mandatory('`nexus_webhook_secret_key` definition is mandatory') }}"
nexus_webhook_url: http://localhost:8080

nexus_skao_ad_ldap_password: "{{ _ | mandatory('`nexus_skao_ad_ldap_password` definition is mandatory') }}"
nexus_ldap_connections:
  - ldap_name: SKAO HQ AD
    ldap_protocol: ldap
    ldap_hostname: dc-ad-euwest2-2.ad.skatelescope.org
    ldap_port: 389
    ldap_auth: simple
    ldap_auth_username: svc_NexusDirAuth
    ldap_auth_password: "{{ nexus_skao_ad_ldap_password }}"
    ldap_search_base: dc=ad,dc=skatelescope,dc=org
    ldap_user_base_dn: OU=SKAUsers,OU=SKA
    ldap_user_filter: |-
      (|(memberOf=CN=skao-nexus-users,OU=SKAUserGroups,OU=SKASecurityGroups,OU=SKA,DC=ad,DC=skatelescope,DC=org)
      (memberOf=CN=ITDept,OU=SKAUserGroups,OU=SKASecurityGroups,OU=SKA,DC=ad,DC=skatelescope,DC=org))
    ldap_user_object_class: user
    ldap_user_id_attribute: sAMAccountName
    ldap_user_real_name_attribute: displayName
    ldap_user_email_attribute: mail
    ldap_user_subtree: true
    ldap_map_groups_as_roles: true
    ldap_map_groups_as_roles_type: dynamic
    ldap_group_member_attribute: memberOf
    ldap_group_subtree: true

nexus_delete_default_repos: true

nexus_config_docker: true
nexus_config_apt: true
nexus_config_maven: false
nexus_config_npm: false
nexus_config_gitlfs: false
nexus_config_pypi: false
nexus_config_raw: false
nexus_config_helm: false
nexus_config_conan: false
nexus_config_yum: false
nexus_config_conda: false
nexus_config_go: false

nexus_repos_cleanup_policies:
  - name: mvn_cleanup
    format: maven2
    mode:
    notes: ""
    criteria:
      lastBlobUpdated: 60
      lastDownloaded: 120
  - name: delete-quarantined-ansible
    format: raw
    mode:
    notes: "This policy deletes quarantined ansible files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-quarantined-apt
    format: apt
    mode:
    notes: "This policy deletes quarantined apt files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-quarantined-raw
    format: raw
    mode:
    notes: "This policy deletes quarantined raw files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-quarantined-conan
    format: conan
    mode:
    notes: "This policy deletes quarantined conan files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-quarantined-docker
    format: docker
    mode:
    notes: "This policy deletes quarantined docker files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-quarantined-helm
    format: helm
    mode:
    notes: "This policy deletes quarantined helm files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-quarantined-pypi
    format: pypi
    mode:
    notes: "This policy deletes quarantined pypi files after 30 days"
    criteria:
      lastBlobUpdated: 30
  - name: delete-k8s-creds
    format: raw
    mode:
    notes: "This policy deletes k8s credentials after 1 day they are uploaded (i.e. created)"
    criteria:
      lastBlobUpdated: 1
  - name: docker_latest_cleanup
    format: docker
    mode:
    notes: "Purge :latest tags/images"
    criteria:
      regexKey: ".*latest"

nexus_content_selectors:
  - name: docker-login
    description: Selector for docker login privilege
    search_expression: format=="docker" and path=~"/v2/"

nexus_privileges:
  - name: ska-all-repos-read
    description: 'Read & Browse access to all repos'
    type: repository-view
    format: '*'
    repository: '*'
    actions:
      - read
      - browse
  - name: ska-project-deploy
    description: 'Deployments to all ska-projects'
    type: repository-view
    format: '*'
    repository: '*'
    actions:
      - add
      - edit
      - update
      - read
      - browse
  - name: docker-login-privilege
    type: repository-content-selector
    contentSelector: docker-login
    description: 'Login to Docker registry'
    repository: '*'
    actions:
      - read
      - browse

nexus_roles:
  - id: ReadOnly
    name: readonly
    description: Read only access
    privileges:
      - nx-search-read
      - ska-all-repos-read
    roles: []
  - id: SKADevelopers
    name: skadevelopers
    description: All SKA developers
    privileges:
      - nx-search-read
      - ska-all-repos-read
      - ska-project-deploy
      - nx-component-upload
    roles: []
  - id: SKAReadWrite
    name: skareadwrite
    description: SKA Read write access
    privileges:
      - nx-search-read
      - ska-all-repos-read
      - ska-project-deploy
      - nx-component-upload
    roles: []
  - id: SKAQuarantine
    name: skaquarantine
    description: SKA quarantine access
    privileges:
      - nx-search-read
      - nx-component-upload
      - nx-repository-view-*-*-browse
      - nx-repository-view-*-*-delete
      - nx-repository-view-*-*-read
    roles: []

nexus_local_users:
  - username: gitlab
    first_name: gitlab
    last_name: CI
    email: system-team-support@skatelescope.org
    password: "{{ nexus_gitlab_password }}"
    roles:
      - SKADevelopers
  - username: publisher
    first_name: publisher
    last_name: CI
    email: system-team-support@skatelescope.org
    password: "{{ nexus_publisher_password }}"
    roles:
      - SKAReadWrite
  - username: quarantiner
    first_name: quarantiner
    last_name: CI
    email: system-team-support@skatelescope.org
    password: "{{ nexus_quarantiner_password }}"
    roles:
      - SKAQuarantine

nexus_scheduled_tasks:
  - name: compact-blobstore
    cron: '0 0 22 * * ?'
    typeId: blobstore.compact
    task_alert_email: "{{ nexus_channel_email_address }}"
    taskProperties:
      blobstoreName: 'default'
  - name: Purge unused docker manifests and images
    cron: '0 0 21 * * ?'
    typeId: "repository.docker.gc"
    task_alert_email: "{{ nexus_channel_email_address }}"
    taskProperties:
      repositoryName: "*"
  - name: Purge incomplete docker uploads
    cron: '0 0 0 * * ?'
    typeId: "repository.docker.upload-purge"
    task_alert_email: "{{ nexus_channel_email_address }}"
    taskProperties:
      age: "24"
  - name: database-backup
    cron: '0 0 19 * * ?'
    typeId: db.backup
    task_alert_email: "{{ nexus_channel_email_address }}"
    taskProperties:
      location: '{{ nexus_backup_dir }}'
  - name: delete-old-database-backups
    cron: '0 0 20 * * ?'
    typeId: script
    taskProperties:
      language: groovy
      source: |+
        import java.time.LocalDateTime
        import org.apache.commons.io.FileUtils
        import java.time.format.DateTimeFormatter
        import java.util.concurrent.TimeUnit
        import static groovy.io.FileType.FILES

        nexusBackupDirPath = "/var/lib/nexus/backup"
        maxFileAgeInDays = "2".toInteger()

        File sourceFolder = new File(nexusBackupDirPath)
        assert sourceFolder.exists(): "${sourceFolder} does not exist"

        try {
            log.info("Backup directory is {}, deleting any backup file older than {} days", nexusBackupDirPath, maxFileAgeInDays)

            dateThreshold = new Date().minus(maxFileAgeInDays)

            sourceFolder.eachFileRecurse(FILES) { file ->
              // find *.bak files in nexusBackupDirPath
              if (file.name.endsWith('.bak')) {
                log.info("Checking file {} - {}", file.name, file.lastModified())
                if (new Date(file.lastModified()) < dateThreshold) {
                  log.info("Deleting old backup file {}", file.name)
                  file.delete()
                } else {
                  log.info("Keeping backup file {}", file.name)
                }
              }
            }
        } catch (Exception e) {
            log.error(e.toString())
        }
  - name: add-webhooks-to-internal-repositories
    schedule_type: once
    typeId: script
    taskProperties:
      language: groovy
      source: |+
        import org.sonatype.nexus.capability.CapabilityReference
        import org.sonatype.nexus.capability.CapabilityType
        import org.sonatype.nexus.internal.capability.DefaultCapabilityReference
        import org.sonatype.nexus.internal.capability.DefaultCapabilityRegistry

        // Repositories to add webhooks to
        def repos = ['pypi-internal', 'helm-internal', 'docker-internal', 'k8s-ci-creds-internal',
                    'ansible-internal', 'raw-internal', 'conan-internal', 'rpm-internal']

        // Loopup the capability registry
        def capabilityRegistry = container.lookup(DefaultCapabilityRegistry.class.getName())

        // Set webhook common values
        def capabilityType = CapabilityType.capabilityType("webhook.repository")
        def capabilityNotes = 'Configured through scripting api'

        // Remove old webhooks
        capabilityRegistry.getAll().each { DefaultCapabilityReference capability ->
          if(capability.type.equals(capabilityType)) {
            log.info('Capability removed: {}', capabilityRegistry.remove(capability.id).toString())
          }
        }

        // For each repo
        repos.each { repoName ->
          // Define the webhook properties
          def capabilityProps = ['names':'component','repository':repoName,'secret':'{{ nexus_webhook_secret_key }}','url':'{{ nexus_webhook_url }}']

          // Add new webhook
          log.info('Capability created as: {}', capabilityRegistry.add(capabilityType, true, capabilityNotes, capabilityProps).toString())
        }

nexus_repos_maven_proxy:
  - name: maven-central-proxy
    remote_url: 'https://repo1.maven.org/maven2/'
    layout_policy: permissive
    cleanup_policies:
      - mvn_cleanup
  - name: maven-jboss-proxy
    remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'
    cleanup_policies:
      - mvn_cleanup

nexus_repos_maven_hosted:
  - name: maven-internal
    blob_store: default
    version_policy: mixed
    write_policy: allow_once
    cleanup_policies:
      - mvn_cleanup

nexus_repos_maven_group:
  - name: maven-all
    member_repos:
      - maven-internal
      - maven-central-proxy
      - maven-jboss-proxy

nexus_repos_pypi_hosted:
  - name: pypi-internal
    version_policy: release
    write_policy: allow_once
  - name: pypi-quarantine
    write_policy: allow
    cleanup_policies:
      - delete-quarantined-pypi

nexus_repos_pypi_group:
  - name: pypi-all
    member_repos:
      - pypi-internal
      - pypi-proxy

nexus_repos_pypi_proxy:
  - name: pypi-proxy
    remote_url: 'https://pypi.python.org/'

nexus_repos_raw_hosted:
  - name: raw-telmodel
    write_policy: allow
  - name: raw-internal
    version_policy: release
    write_policy: allow_once
  - name: raw-quarantine
    write_policy: allow
    cleanup_policies:
      - delete-quarantined-raw
  - name: ansible-internal
    version_policy: release
    write_policy: allow_once
  - name: ansible-quarantine
    write_policy: allow
    cleanup_policies:
      - delete-quarantined-ansible
  - name: k8s-ci-creds-internal
    version_policy: release
    write_policy: allow
    cleanup_policies:
      - delete-k8s-creds

nexus_repos_raw_proxy:
  - name: ubuntu-archive
    remote_url: 'http://archive.ubuntu.com/ubuntu/'

nexus_repos_raw_group:
  - name: raw-all
    member_repos:
      - raw-internal
      - ubuntu-archive

nexus_repos_docker_hosted:
  - name: docker-internal
    http_port: "{{ nexus_docker_hosted_port }}"
    blob_store: "default"
    v1_enabled: true
    write_policy: allow_once
    force_basic_auth: false
    cleanup_policies:
      - docker_latest_cleanup
  - name: docker-quarantine
    http_port: "{{ nexus_docker_quarantine_port }}"
    v1_enabled: true
    write_policy: allow
    force_basic_auth: false
    cleanup_policies:
      - delete-quarantined-docker

nexus_repos_docker_proxy:
  - name: docker-proxy
    http_port: "{{ nexus_docker_proxy_port }}"
    blob_store: "default"
    v1_enabled: true
    force_basic_auth: false
    index_type: "HUB"
    remote_url: "https://registry-1.docker.io"
    use_nexus_certificates_to_access_index: false
    cache_foreign_layers: true
    foreign_layer_url_whitelist:
      - ".*"
    maximum_component_age: 10080
    maximum_metadata_age: 10080
    negative_cache_enabled: true
    negative_cache_ttl: 1440
  - name: central-proxy
    http_port: "{{ nexus_central_proxy_port }}"
    blob_store: "default"
    v1_enabled: true
    index_type: "REGISTRY"
    remote_url: "https://artefact.skao.int"
    use_nexus_certificates_to_access_index: false
    cache_foreign_layers: true
    foreign_layer_url_whitelist:
      - ".*"
    maximum_component_age: 10080
    maximum_metadata_age: 10080
    negative_cache_enabled: true
    negative_cache_ttl: 1440
  - name: gitlab-proxy
    http_port: "{{ nexus_gitlab_proxy_port }}"
    blob_store: "default"
    v1_enabled: true
    index_type: "REGISTRY"
    remote_url: "https://registry.gitlab.com"
    use_nexus_certificates_to_access_index: false
    cache_foreign_layers: true
    foreign_layer_url_whitelist:
      - ".*"
    maximum_component_age: 10080
    maximum_metadata_age: 10080
    negative_cache_enabled: true
    negative_cache_ttl: 1440

nexus_repos_docker_group:
  - name: docker-all
    http_port: "{{ nexus_docker_group_port }}"
    v1_enabled: true
    force_basic_auth: false
    member_repos:
      - docker-internal
      - central-proxy
      - gitlab-proxy
      - docker-proxy

nexus_repos_npm_hosted:
  - name: npm-internal
    blob_store: "{{ nexus_blob_names.npm.blob }}"

nexus_repos_npm_proxy:
  - name: npm-proxy
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    remote_url: https://registry.npmjs.org

nexus_repos_npm_group:
  - name: npm-all
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    member_repos:
      - npm-internal
      - npm-proxy

nexus_repos_gitlfs_hosted:
  - name: gitlfs-internal
    blob_store: "{{ nexus_blob_names.gitlfs.blob }}"

nexus_repos_yum_hosted: []
nexus_repos_yum_proxy:
  - name: epel_centos_7_x86_64
    remote_url: http://download.fedoraproject.org/pub/epel/7/x86_64
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: epel_centos_8_x86_64
    remote_url: http://download.fedoraproject.org/pub/epel/8/Everything/x86_64
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60

nexus_repos_yum_group:
  - name: centos7-all
    member_repos:
      - epel_centos_7_x86_64
  - name: centos8-all
      - epel_centos_8_x86_64

nexus_repos_apt_ubuntu_proxy:
  - name: ubuntu-bionic-proxy
    remote_url: http://archive.ubuntu.com/ubuntu/
    distribution: bionic
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ubuntu-focal-proxy
    remote_url: http://archive.ubuntu.com/ubuntu/
    distribution: focal
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ubuntu-jammy-proxy
    remote_url: http://archive.ubuntu.com/ubuntu/
    distribution: jammy
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ubuntu-security-bionic-proxy
    remote_url: http://security.ubuntu.com/ubuntu/
    distribution: bionic
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ubuntu-security-focal-proxy
    remote_url: http://security.ubuntu.com/ubuntu/
    distribution: focal
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ubuntu-security-jammy-proxy
    remote_url: http://security.ubuntu.com/ubuntu/
    distribution: jammy
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60

nexus_repos_apt_ceph_clouds_proxy:
  - name: ceph-clouds-ubuntu-bionic-proxy
    remote_url: http://ceph.clouds.archive.ubuntu.com/ubuntu/
    distribution: bionic
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ceph-clouds-ubuntu-focal-proxy
    remote_url: http://ceph.clouds.archive.ubuntu.com/ubuntu/
    distribution: focal
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60
  - name: ceph-clouds-ubuntu-jammy-proxy
    remote_url: http://ceph.clouds.archive.ubuntu.com/ubuntu/
    distribution: jammy
    maximum_component_age: -1
    maximum_metadata_age: -1
    negative_cache_ttl: 60

nexus_repos_apt_hosted: []
nexus_repos_apt_proxy: "{{ nexus_repos_apt_ubuntu_proxy }}"

nexus_repos_helm_hosted:
  - name: helm-internal
    write_policy: allow_once
  - name: helm-quarantine
    write_policy: allow
    cleanup_policies:
      - delete-quarantined-helm

nexus_repos_helm_proxy:
  - name: helm-proxy
    remote_url: https://charts.helm.sh/stable

nexus_repos_conan_hosted:
  - name: conan-internal
    write_policy: allow
    blobStoreName: "default"
    blob_store: "default"
    strict_content_validation: true
  - name: conan-quarantine
    write_policy: allow
    blobStoreName: "default"
    blob_store: "default"
    strict_content_validation: true
    cleanup_policies:
      - delete-quarantined-conan

nexus_repos_conan_proxy:
  - name: conan-proxy
    blob_store: "default"
    strict_content_validation: true
    remote_url: "https://center.conan.io"
    version_policy: release
    layout_policy: strict
    write_policy: allow_once
    maximum_component_age: 1440
    maximum_metadata_age: 1440
    negative_cache_enabled: true
    negative_cache_ttl: 1440

nexus_repos_conda_proxy:
  - name: conda-proxy
    remote_url: 'https://repo.continuum.io/pkgs/'

nexus_repos_go_proxy:
  - name: go-proxy
    remote_url: 'https://golang.org/pkg/'

# Tests variables
nexus_apt_proxy_cache: "http://{{ hostvars[inventory_hostname].ip }}"
nexus_apt_proxy_cache_api_base_url: "{{ nexus_apt_proxy_cache }}:{{ nexus_default_port }}/service/rest/v1"
nexus_apt_test_package: "python3-doc"
nexus_apt_test_repository: "ceph-clouds-ubuntu-{{ ansible_distribution_release }}-proxy"
nexus_apt_test_package_search_url: "{{ nexus_apt_proxy_cache_api_base_url }}/search?\
repository={{ nexus_apt_test_repository }}&format=apt&name={{ nexus_apt_test_package }}"
nexus_apt_test_repository_url: "{{ nexus_apt_proxy_cache }}:{{ nexus_default_port }}/repository/{{ nexus_apt_test_repository }}"
nexus_apt_test_self: "{{ (hostvars[inventory_hostname].ip in nexus_oci_proxy_cache) | bool }}"
nexus_apt_test_update_sources: "{{ nexus_apt_test_self }}"

nexus_oci_proxy_cache: "http://{{ hostvars[inventory_hostname].ip }}"
nexus_oci_proxy_cache_api_base_url: "{{ nexus_oci_proxy_cache }}:{{ nexus_default_port }}/service/rest/v1"
nexus_oci_proxy_cache_engine: "docker"
nexus_oci_proxy_cache_insecure: true
nexus_oci_test_image_name: "python"
nexus_oci_test_image_tag: "3-alpine"
nexus_oci_test_repository: "docker-proxy"
nexus_oci_test_package_search_url: "{{ nexus_oci_proxy_cache_api_base_url }}/search?\
repository={{ nexus_oci_test_repository }}&format=docker&name=library/{{ nexus_oci_test_image_name }}&version={{ nexus_oci_test_image_tag }}"
nexus_oci_test_self: "{{ (hostvars[inventory_hostname].ip in nexus_oci_proxy_cache) | bool }}"
nexus_oci_test_self_url: "127.0.0.1:{{ nexus_docker_group_port }}/"
nexus_oci_test_image: "{{ nexus_oci_test_self | ternary(nexus_oci_test_self_url, '') }}{{ nexus_oci_test_image_name }}:{{ nexus_oci_test_image_tag }}"
