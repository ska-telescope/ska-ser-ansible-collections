- name: Create /etc/ha_config directory
  ansible.builtin.file:
    path: /etc/hap_config
    state: directory
    mode: 0755

- name: Create haproxy config
  ansible.builtin.template:
    src: haproxyConfig.j2
    dest: /etc/hap_config/haproxy.cfg
    mode: "0644"
  register: hapconfig

- name: Create /etc/ncs_config directory
  ansible.builtin.file:
    path: /etc/ncs_config
    state: directory
    mode: 0644

- name: Create ncs config
  ansible.builtin.template:
    src: fastapi-plugins.conf.yaml.j2
    dest: /etc/ncs_config/fastapi-plugins.conf.yaml
    mode: "0644"
  register: ncsconfig

- name: "Docker pull image for {{ nexus_haproxy_name }}"
  community.docker.docker_image:
    source: pull
    name: "{{ nexus_haproxy_container_image }}"
  register: hapimage

- name: "Docker pull image for {{ nexus_haproxy_conan_search_container_image }}"
  community.docker.docker_image:
    source: pull
    name: "{{ nexus_haproxy_conan_search_container_image }}"
  register: ncsimage

- name: "Get {{ nexus_haproxy_name }} container info"
  community.docker.docker_container_info:
    name: "{{ nexus_haproxy_name }}"
  register: hainfo

- name: "Get {{ nexus_haproxy_conan_search_name }} container info"
  community.docker.docker_container_info:
    name: "{{ nexus_haproxy_conan_search_name }}"
  register: ncsinfo

- name: "Run {{ nexus_haproxy_conan_search_name }} container"  # noqa 503
  community.docker.docker_container:
    name: "{{ nexus_haproxy_conan_search_name }}"
    image: "{{ nexus_haproxy_conan_search_container_image }}"
    # restart: yes
    recreate: true
    restart_policy: always
    state: started
    privileged: true
    network_mode: host
    exposed_ports:
      - "{{ nexus_haproxy_conan_search_proxy_port }}"
    labels: "{{ nexus_haproxy_container_labels }}"
    log_driver: "{{ nexus_haproxy_container_log_driver }}"
    log_options: "{{ nexus_haproxy_container_log_options }}"
    volumes:
      - /etc/ncs_config:/etc/ncs_config
    command: "uvicorn app.main:app --proxy-headers --host 0.0.0.0 --port {{ nexus_haproxy_conan_search_proxy_port }}"
    env: "{{ nexus_haproxy_conan_search_defaults | combine(nexus_haproxy_conan_search_env_variables) }}"
  when: ncsconfig.changed or ncsimage.changed or not ncsinfo.exists or not ncsinfo.container.State.Running

- name: "Run {{ nexus_haproxy_name }} in a container"  # noqa 503
  community.docker.docker_container:
    name: "{{ nexus_haproxy_name }}"
    image: "{{ nexus_haproxy_container_image }}"
    # restart: yes
    recreate: true
    restart_policy: always
    state: started
    privileged: true
    network_mode: host
    exposed_ports:
      - "{{ nexus_haproxy_port }}"
    labels: "{{ nexus_haproxy_container_labels }}"
    log_driver: "{{ nexus_haproxy_container_log_driver }}"
    log_options: "{{ nexus_haproxy_container_log_options }}"
    volumes:
      - /etc/hap_config/:/usr/local/etc/haproxy/
    command: -f /usr/local/etc/haproxy/haproxy.cfg
  when: hapconfig.changed or hapimage.changed or not hainfo.exists or not hainfo.container.State.Running
