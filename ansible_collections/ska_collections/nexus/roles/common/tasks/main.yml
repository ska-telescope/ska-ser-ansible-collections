---

- name: Set hostnames
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
  when: not inventory_hostname == "localhost"
  become: true

- name: update /etc/hosts
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: '{{ ansible_default_ipv4.address }} .*{{ inventory_hostname }}'
    line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}"
    state: present
  when: not inventory_hostname == "localhost"
  register: updatehosts
  become: true
  tags:
    - notest

- name: update /etc/hosts others
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ hostvars[item].inventory_hostname }}.*'
    line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ hostvars[item].inventory_hostname }}"
    state: present
  with_items: '{{ groups["all"] }}'
  when: not item == "localhost"
  register: updatehosts
  become: true
  tags:
    - notest

- name: Ensure required packages are installed (apt)
  ansible.builtin.apt:
    name: "{{ common_packages | default([]) }}"
    update_cache: true
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure dnf installed
  ansible.builtin.yum:
    name: "dnf"
    state: present
  when: ansible_distribution == "CentOS"

- name: Ensure required packages are installed (dnf)
  ansible.builtin.dnf:
    name: "{{ common_packages | default([]) }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Upgrade all packages (apt)
  ansible.builtin.apt:
    upgrade: dist
    autoremove: true
  when: ansible_os_family == "Debian"

- name: upgrade all packages (dnf)  # noqa 403
  ansible.builtin.dnf:
    name: "*"
    state: latest
  when: ansible_os_family == "RedHat"

- name: "Enable {{ ntp_service }} service"
  ansible.builtin.service:
    name: "{{ ntp_service }}"
    enabled: true

- name: Make sure the NTP service is stopped
  ansible.builtin.service:
    name: "{{ ntp_service }}"
    state: stopped
  tags:
    - notest

- name: Force NTP sync
  ansible.builtin.command: "{{ ntp_sync }}"
  changed_when: false
  tags:
    - notest

- name: Start the NTP service
  ansible.builtin.service:
    name: "{{ ntp_service }}"
    state: started
    enabled: true
  tags:
    - notest

- name: Set ulimits limits
  ansible.builtin.lineinfile: dest=/etc/security/limits.conf
              insertbefore="^# End of file"
              state=present
              line="{{ item }}"
  with_items:
    - "* soft nofile 65536"
    - "* hard nofile 65536"
    - "* soft memlock unlimited"
    - "* hard memlock unlimited"
    - "* soft nproc 65536"
    - "* hard nproc 65536"

- name: Set swappiness to 1
  sysctl:
    name: vm.swappiness
    value: "1"
    state: present
    ignoreerrors: true

- name: Disable Transparent Huge Pages in Grub 2
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    state: present
    line: 'GRUB_CMDLINE_LINUX=$GRUB_CMDLINE_LINUX" transparent_hugepage=never"'
  # when: ansible_distribution_major_version|int > 6
  notify: run update-grub
  tags:
    - notest

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Disable Transparent Huge Pages until reboot
  ansible.builtin.command: echo never > /sys/kernel/mm/transparent_hugepage/enabled && echo never > /sys/kernel/mm/transparent_hugepage/defrag
  failed_when: false
  changed_when: false
  tags:
    - notest
