# Kibana settings
server.name: "{{ inventory_hostname }}"
server.host: "0.0.0.0"
server.port: {{ kibana_port }}
server.basePath: "{{ kibana_basepath }}"
server.rewriteBasePath: true
server.ssl.enabled: false

# Elasticsearch settings
elasticsearch.serviceAccountToken: "{{ elasticsearch_kibana_token }}"
elasticsearch.ssl.verificationMode: "certificate"
elasticsearch.ssl.alwaysPresentCertificate: true
elasticsearch.ssl.certificate: "/usr/share/kibana/config/certificates/{{ inventory_hostname }}.crt"
elasticsearch.ssl.key: "/usr/share/kibana/config/certificates/{{ inventory_hostname }}.key"
elasticsearch.ssl.certificateAuthorities: [ "/usr/share/kibana/config/certificates/ca-certificate.crt" ]

# Features
monitoring.ui.enabled: true

# XPACK
xpack.security.authc.providers:
  anonymous.anonymous1:
    order: 0
    credentials:
      username: "{{kibana_viewer_user }}"
      password: "{{ kibana_viewer_password }}"
  basic.basic1:
    order: 1
xpack.reporting.kibanaServer.hostname: localhost
xpack.reporting.encryptionKey: "{{ kibana_encryption_keys.reporting }}"
xpack.security.encryptionKey: "{{ kibana_encryption_keys.security }}"
xpack.encryptedSavedObjects.encryptionKey: "{{ kibana_encryption_keys.encryptedSavedObjects }}"
xpack.monitoring.collection.enabled: true

# Elasticsearch settings
elasticsearch.hosts:
{% for item in (groups[target_hosts ~ '-master'] + groups[target_hosts ~ '-data']) %}
  - https://{{ hostvars[item].ip }}:{{ elasticsearch_api_port }}
{% endfor %}