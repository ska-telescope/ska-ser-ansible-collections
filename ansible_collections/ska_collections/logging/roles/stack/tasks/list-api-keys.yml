---
- name: "List elasticsearch api keys"
  ansible.builtin.uri:
    url: "https://{{ hostvars[inventory_hostname].ip }}:{{ elasticsearch_api_port }}/_security/api_key?pretty"
    method: GET
    force: true
    return_content: true
    status_code: [200]
    client_cert: "{{ certificates_dir }}/{{ inventory_hostname }}.crt"
    client_key: "{{ certificates_dir }}/{{ inventory_hostname }}.key"
    url_username: elastic
    url_password: "{{ elasticsearch_password }}"
  environment:
    SSL_CERT_FILE: "{{ certificates_dir }}/ca-certificate.crt"
  register: apikeys_list
  retries: 3
  timeout: 60

- name: "Set issued_api_keys"
  ansible.builtin.set_fact:
    valid_api_keys: []
    issued_api_keys: "{{ apikeys_list.content | from_json | json_query('api_keys') |
    selectattr('metadata.issuer', 'defined') |
    selectattr('metadata.issuer', 'equalto', elasticsearch_api_key_issuer) }}"

- name: "Get api keys"
  ansible.builtin.set_fact:
    valid_api_keys: "{{ valid_api_keys | combine({item.id: item.name}) }}"
  with_items: "{{ issued_api_keys }}"
  when: 'item.invalidated is false'
  loop_control:
    label: "{{ item.id }} ({{ item.name }}) is {{ item.invalidated | ternary('invalidated', 'valid') }}"
