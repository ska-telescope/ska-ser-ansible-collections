---
- name: OS Family
  ansible.builtin.debug: var=ansible_os_family

- name: Debian Podman install
  when: ansible_os_family == "Debian"
  block:
    - name: Add podman project apt key
      ansible.builtin.apt_key:
        url: "{{ podman_deb_repo_key_url }}"

    - name: Add podman project apt source
      ansible.builtin.lineinfile:
        line: "{{ podman_deb_repo_url }}"
        dest: /etc/apt/sources.list.d/podman.list
        create: true
        owner: root
        group: root
        mode: 0644
      register: installed_podman

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Upgrade all packages (apt)
      ansible.builtin.apt:
        upgrade: true
        autoremove: true

    - name: Set kernel.unprivileged_userns_clone=1
      ansible.posix.sysctl: name=kernel.unprivileged_userns_clone value=1 state=present ignoreerrors=true
      notify:
        - restart procps

    - name: Set user.max_inotify_instances to 1048576
      sysctl: name=user.max_inotify_instances value=1048576 state=present ignoreerrors=true

    - name: Set fs.inotify.max_user_watches to 1048576
      ansible.posix.sysctl: name=fs.inotify.max_user_watches value=1048576 state=present ignoreerrors=true

    - name: Install podman CE (apt)
      ansible.builtin.apt:
        name: "{{ podman_deb_pkgs }}"
        state: present
        force: true

    - name: Configure podman
      ansible.builtin.template:
        src: registries.conf.j2
        dest: "/etc/containers/registries.conf.d/mirror.conf"
        mode: "0644"

    - name: "Check if /etc/containers/storage.conf exists"
      ansible.builtin.stat:
        path: "/etc/containers/storage.conf"
      register: result_storage

    - name: Remove metacopy=on - not supported prior 4.19
      ansible.builtin.replace:
        dest: /etc/containers/storage.conf
        regexp: '^mountopt = .*'
        replace: 'mountopt = "nodev"'
        backup: true
      when: result_storage.stat.exists

    - name: Enable service docker and ensure it is not masked
      ansible.builtin.systemd:
        name: docker
        enabled: true
        masked: false

- name: Flush those handlers
  ansible.builtin.meta: flush_handlers
