- op: add
  path: /spec/kubeadmConfigSpec/files/-
  target:
    kind: KubeadmControlPlane
  value:
    owner: root:root
    path: /etc/kubernetes/kubeadm-post.sh
    content: |
      #!/usr/bin/bash

      echo ""
      echo "==================================================================="
      echo "controlplane postKubeadmCommands: start $(date)"

      export KUBECONFIG=/etc/kubernetes/admin.conf
      export CLUSTER_NAME=${CLUSTER_NAME}
      export OPENSTACK_CLOUD=${OPENSTACK_CLOUD}

      export CALICO_VERSION=${CALICO_VERSION}
      export CALICO_IPV4POOL_CIDR=${POD_CIDR_BLOCK}
      export IP_AUTODETECTION_METHOD=${IP_AUTODETECTION_METHOD}
      export CALICO_IPV4POOL_IPIP=${CALICO_IPV4POOL_IPIP}

      set -x

      # check if we are running on one of the other nodes
      MAP=`kubectl -n kube-system get configmap clusterapi-post-run -o yaml`
      rc=$?
      if [[ $rc -eq 0 ]]; then
        echo "clusterapi post kubedm job already running:"
        echo $MAP
        exit
      fi

      iface=`route | grep '^default'  | grep -o '[^ ]*$'`
      ip=`ip a show $iface | grep ' inet ' | awk '{print $2}'`
      kubectl -n kube-system create configmap clusterapi-post-run \
       --from-literal=on-host=$(hostname) \
       --from-literal=ip=$ip

      echo "Running the cluster initialisation: deploy calico"
      /usr/src/ska-ser-ansible-collections/run-play.sh calico-install.yml \
        -e "calico_version=${CALICO_VERSION}" \
        -e "calico_ipv4pool_cidr=${CALICO_IPV4POOL_CIDR}" \
        -e "calico_ipv4pool_ipip=${CALICO_IPV4POOL_IPIP}" \
        -e "calico_ip_autodetection_method=${IP_AUTODETECTION_METHOD}" \
        -vv

      echo "Controlplane initialise: cloud provider config"
      /usr/src/ska-ser-ansible-collections/run-play.sh ../../k8s/playbooks/cloudprovider.yml \
        --extra-vars "capi_cluster=${CLUSTER_NAME}" \
        --extra-vars "k8s_cloudprovider_wait=" \
        --extra-vars "k8s_cloudprovider_kubeconfig=$KUBECONFIG" \
        --extra-vars "k8s_cloudprovider_enable_service_controller=${CLOUDPROVIDER_ENABLE_SERVICE_CONTROLLER}" \
        --extra-vars "capi_capo_openstack_cloud_config=/etc/kubernetes/clouds.yaml" \
        --extra-vars "capi_capo_openstack_cloud=${OPENSTACK_CLOUD}" \
        --tags "cloudprovider" \
        -vv

      echo "postKubeadmCommands: end $(date)"
      exit 0

- op: add
  path: /spec/kubeadmConfigSpec/postKubeadmCommands/-
  target:
    kind: KubeadmControlPlane
  value:
    '/usr/bin/bash /etc/kubernetes/kubeadm-post.sh >>/tmp/capo-config.log 2>&1'
